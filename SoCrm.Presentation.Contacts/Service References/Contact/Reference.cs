//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18034
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SoCrm.Presentation.Contacts.Contact {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="Contact.IContactService")]
    public interface IContactService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContactService/GetContactsByPerson", ReplyAction="http://tempuri.org/IContactService/GetContactsByPersonResponse")]
        System.Collections.Generic.List<SoCrm.Services.Contacts.Contracts.Contact> GetContactsByPerson(SoCrm.Services.Customers.Contracts.Person person);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContactService/GetContactsByCompany", ReplyAction="http://tempuri.org/IContactService/GetContactsByCompanyResponse")]
        System.Collections.Generic.List<SoCrm.Services.Contacts.Contracts.Contact> GetContactsByCompany(SoCrm.Services.Customers.Contracts.Company company);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContactService/GetContactsByUser", ReplyAction="http://tempuri.org/IContactService/GetContactsByUserResponse")]
        System.Collections.Generic.List<SoCrm.Services.Contacts.Contracts.Contact> GetContactsByUser(SoCrm.Services.Security.Contracts.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContactService/GetContactByObjectId", ReplyAction="http://tempuri.org/IContactService/GetContactByObjectIdResponse")]
        SoCrm.Services.Contacts.Contracts.Contact GetContactByObjectId(System.Guid objectId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContactService/GetContactsByContactMedium", ReplyAction="http://tempuri.org/IContactService/GetContactsByContactMediumResponse")]
        System.Collections.Generic.List<SoCrm.Services.Contacts.Contracts.Contact> GetContactsByContactMedium(SoCrm.Services.Contacts.Contracts.ContactMedium contactMedium);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContactService/GetContactsByContactMediumAndPersonName", ReplyAction="http://tempuri.org/IContactService/GetContactsByContactMediumAndPersonNameRespons" +
            "e")]
        System.Collections.Generic.List<SoCrm.Services.Contacts.Contracts.Contact> GetContactsByContactMediumAndPersonName(SoCrm.Services.Contacts.Contracts.ContactMedium contactMedium, string personName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContactService/GetAllContactMediums", ReplyAction="http://tempuri.org/IContactService/GetAllContactMediumsResponse")]
        System.Collections.Generic.List<SoCrm.Services.Contacts.Contracts.ContactMedium> GetAllContactMediums();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContactService/CreateContact", ReplyAction="http://tempuri.org/IContactService/CreateContactResponse")]
        SoCrm.Services.Contacts.Contracts.Contact CreateContact(SoCrm.Services.Security.Contracts.User user, SoCrm.Services.Customers.Contracts.Person person, string content, SoCrm.Services.Contacts.Contracts.ContactMedium medium, System.DateTime dateTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContactService/DeleteContact", ReplyAction="http://tempuri.org/IContactService/DeleteContactResponse")]
        void DeleteContact(SoCrm.Services.Contacts.Contracts.Contact contact);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IContactServiceChannel : SoCrm.Presentation.Contacts.Contact.IContactService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ContactServiceClient : System.ServiceModel.ClientBase<SoCrm.Presentation.Contacts.Contact.IContactService>, SoCrm.Presentation.Contacts.Contact.IContactService {
        
        public ContactServiceClient() {
        }
        
        public ContactServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ContactServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ContactServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ContactServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Collections.Generic.List<SoCrm.Services.Contacts.Contracts.Contact> GetContactsByPerson(SoCrm.Services.Customers.Contracts.Person person) {
            return base.Channel.GetContactsByPerson(person);
        }
        
        public System.Collections.Generic.List<SoCrm.Services.Contacts.Contracts.Contact> GetContactsByCompany(SoCrm.Services.Customers.Contracts.Company company) {
            return base.Channel.GetContactsByCompany(company);
        }
        
        public System.Collections.Generic.List<SoCrm.Services.Contacts.Contracts.Contact> GetContactsByUser(SoCrm.Services.Security.Contracts.User user) {
            return base.Channel.GetContactsByUser(user);
        }
        
        public SoCrm.Services.Contacts.Contracts.Contact GetContactByObjectId(System.Guid objectId) {
            return base.Channel.GetContactByObjectId(objectId);
        }
        
        public System.Collections.Generic.List<SoCrm.Services.Contacts.Contracts.Contact> GetContactsByContactMedium(SoCrm.Services.Contacts.Contracts.ContactMedium contactMedium) {
            return base.Channel.GetContactsByContactMedium(contactMedium);
        }
        
        public System.Collections.Generic.List<SoCrm.Services.Contacts.Contracts.Contact> GetContactsByContactMediumAndPersonName(SoCrm.Services.Contacts.Contracts.ContactMedium contactMedium, string personName) {
            return base.Channel.GetContactsByContactMediumAndPersonName(contactMedium, personName);
        }
        
        public System.Collections.Generic.List<SoCrm.Services.Contacts.Contracts.ContactMedium> GetAllContactMediums() {
            return base.Channel.GetAllContactMediums();
        }
        
        public SoCrm.Services.Contacts.Contracts.Contact CreateContact(SoCrm.Services.Security.Contracts.User user, SoCrm.Services.Customers.Contracts.Person person, string content, SoCrm.Services.Contacts.Contracts.ContactMedium medium, System.DateTime dateTime) {
            return base.Channel.CreateContact(user, person, content, medium, dateTime);
        }
        
        public void DeleteContact(SoCrm.Services.Contacts.Contracts.Contact contact) {
            base.Channel.DeleteContact(contact);
        }
    }
}
