//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18034
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SoCrm.Services.Contacts.Provider.ContactPersistence {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ContactPersistence.IPersistenceServiceOf_Contact")]
    public interface IPersistenceServiceOf_Contact {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersistenceServiceOf_Contact/Save", ReplyAction="http://tempuri.org/IPersistenceServiceOf_Contact/SaveResponse")]
        System.Guid Save(SoCrm.Services.Contacts.Contracts.Contact entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersistenceServiceOf_Contact/Save", ReplyAction="http://tempuri.org/IPersistenceServiceOf_Contact/SaveResponse")]
        System.Threading.Tasks.Task<System.Guid> SaveAsync(SoCrm.Services.Contacts.Contracts.Contact entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersistenceServiceOf_Contact/Get", ReplyAction="http://tempuri.org/IPersistenceServiceOf_Contact/GetResponse")]
        SoCrm.Services.Contacts.Contracts.Contact Get(System.Guid objectId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersistenceServiceOf_Contact/Get", ReplyAction="http://tempuri.org/IPersistenceServiceOf_Contact/GetResponse")]
        System.Threading.Tasks.Task<SoCrm.Services.Contacts.Contracts.Contact> GetAsync(System.Guid objectId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersistenceServiceOf_Contact/GetAll", ReplyAction="http://tempuri.org/IPersistenceServiceOf_Contact/GetAllResponse")]
        SoCrm.Services.Contacts.Contracts.Contact[] GetAll();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersistenceServiceOf_Contact/GetAll", ReplyAction="http://tempuri.org/IPersistenceServiceOf_Contact/GetAllResponse")]
        System.Threading.Tasks.Task<SoCrm.Services.Contacts.Contracts.Contact[]> GetAllAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersistenceServiceOf_Contact/Remove", ReplyAction="http://tempuri.org/IPersistenceServiceOf_Contact/RemoveResponse")]
        void Remove(SoCrm.Services.Contacts.Contracts.Contact entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersistenceServiceOf_Contact/Remove", ReplyAction="http://tempuri.org/IPersistenceServiceOf_Contact/RemoveResponse")]
        System.Threading.Tasks.Task RemoveAsync(SoCrm.Services.Contacts.Contracts.Contact entity);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IPersistenceServiceOf_ContactChannel : SoCrm.Services.Contacts.Provider.ContactPersistence.IPersistenceServiceOf_Contact, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PersistenceServiceOf_ContactClient : System.ServiceModel.ClientBase<SoCrm.Services.Contacts.Provider.ContactPersistence.IPersistenceServiceOf_Contact>, SoCrm.Services.Contacts.Provider.ContactPersistence.IPersistenceServiceOf_Contact {
        
        public PersistenceServiceOf_ContactClient() {
        }
        
        public PersistenceServiceOf_ContactClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PersistenceServiceOf_ContactClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PersistenceServiceOf_ContactClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PersistenceServiceOf_ContactClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Guid Save(SoCrm.Services.Contacts.Contracts.Contact entity) {
            return base.Channel.Save(entity);
        }
        
        public System.Threading.Tasks.Task<System.Guid> SaveAsync(SoCrm.Services.Contacts.Contracts.Contact entity) {
            return base.Channel.SaveAsync(entity);
        }
        
        public SoCrm.Services.Contacts.Contracts.Contact Get(System.Guid objectId) {
            return base.Channel.Get(objectId);
        }
        
        public System.Threading.Tasks.Task<SoCrm.Services.Contacts.Contracts.Contact> GetAsync(System.Guid objectId) {
            return base.Channel.GetAsync(objectId);
        }
        
        public SoCrm.Services.Contacts.Contracts.Contact[] GetAll() {
            return base.Channel.GetAll();
        }
        
        public System.Threading.Tasks.Task<SoCrm.Services.Contacts.Contracts.Contact[]> GetAllAsync() {
            return base.Channel.GetAllAsync();
        }
        
        public void Remove(SoCrm.Services.Contacts.Contracts.Contact entity) {
            base.Channel.Remove(entity);
        }
        
        public System.Threading.Tasks.Task RemoveAsync(SoCrm.Services.Contacts.Contracts.Contact entity) {
            return base.Channel.RemoveAsync(entity);
        }
    }
}
