//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18034
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SoCrm.Services.Security.Provider.UserPersistence {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DomainObject", Namespace="http://schemas.datacontract.org/2004/07/SoCrm.Contracts")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SoCrm.Services.Security.Contracts.User))]
    public partial class DomainObject : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreationTimeStampField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime LastUpdateTimeStampField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid ObjectIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreationTimeStamp {
            get {
                return this.CreationTimeStampField;
            }
            set {
                if ((this.CreationTimeStampField.Equals(value) != true)) {
                    this.CreationTimeStampField = value;
                    this.RaisePropertyChanged("CreationTimeStamp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastUpdateTimeStamp {
            get {
                return this.LastUpdateTimeStampField;
            }
            set {
                if ((this.LastUpdateTimeStampField.Equals(value) != true)) {
                    this.LastUpdateTimeStampField = value;
                    this.RaisePropertyChanged("LastUpdateTimeStamp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ObjectId {
            get {
                return this.ObjectIdField;
            }
            set {
                if ((this.ObjectIdField.Equals(value) != true)) {
                    this.ObjectIdField = value;
                    this.RaisePropertyChanged("ObjectId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="UserPersistence.IPersistenceServiceOf_User")]
    public interface IPersistenceServiceOf_User {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersistenceServiceOf_User/Save", ReplyAction="http://tempuri.org/IPersistenceServiceOf_User/SaveResponse")]
        void Save(SoCrm.Services.Security.Contracts.User entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersistenceServiceOf_User/Save", ReplyAction="http://tempuri.org/IPersistenceServiceOf_User/SaveResponse")]
        System.Threading.Tasks.Task SaveAsync(SoCrm.Services.Security.Contracts.User entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersistenceServiceOf_User/Get", ReplyAction="http://tempuri.org/IPersistenceServiceOf_User/GetResponse")]
        SoCrm.Services.Security.Contracts.User Get(System.Guid objectId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersistenceServiceOf_User/Get", ReplyAction="http://tempuri.org/IPersistenceServiceOf_User/GetResponse")]
        System.Threading.Tasks.Task<SoCrm.Services.Security.Contracts.User> GetAsync(System.Guid objectId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersistenceServiceOf_User/GetAll", ReplyAction="http://tempuri.org/IPersistenceServiceOf_User/GetAllResponse")]
        SoCrm.Services.Security.Contracts.User[] GetAll();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersistenceServiceOf_User/GetAll", ReplyAction="http://tempuri.org/IPersistenceServiceOf_User/GetAllResponse")]
        System.Threading.Tasks.Task<SoCrm.Services.Security.Contracts.User[]> GetAllAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersistenceServiceOf_User/Remove", ReplyAction="http://tempuri.org/IPersistenceServiceOf_User/RemoveResponse")]
        void Remove(SoCrm.Services.Security.Contracts.User entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersistenceServiceOf_User/Remove", ReplyAction="http://tempuri.org/IPersistenceServiceOf_User/RemoveResponse")]
        System.Threading.Tasks.Task RemoveAsync(SoCrm.Services.Security.Contracts.User entity);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IPersistenceServiceOf_UserChannel : SoCrm.Services.Security.Provider.UserPersistence.IPersistenceServiceOf_User, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PersistenceServiceOf_UserClient : System.ServiceModel.ClientBase<SoCrm.Services.Security.Provider.UserPersistence.IPersistenceServiceOf_User>, SoCrm.Services.Security.Provider.UserPersistence.IPersistenceServiceOf_User {
        
        public PersistenceServiceOf_UserClient() {
        }
        
        public PersistenceServiceOf_UserClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PersistenceServiceOf_UserClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PersistenceServiceOf_UserClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PersistenceServiceOf_UserClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void Save(SoCrm.Services.Security.Contracts.User entity) {
            base.Channel.Save(entity);
        }
        
        public System.Threading.Tasks.Task SaveAsync(SoCrm.Services.Security.Contracts.User entity) {
            return base.Channel.SaveAsync(entity);
        }
        
        public SoCrm.Services.Security.Contracts.User Get(System.Guid objectId) {
            return base.Channel.Get(objectId);
        }
        
        public System.Threading.Tasks.Task<SoCrm.Services.Security.Contracts.User> GetAsync(System.Guid objectId) {
            return base.Channel.GetAsync(objectId);
        }
        
        public SoCrm.Services.Security.Contracts.User[] GetAll() {
            return base.Channel.GetAll();
        }
        
        public System.Threading.Tasks.Task<SoCrm.Services.Security.Contracts.User[]> GetAllAsync() {
            return base.Channel.GetAllAsync();
        }
        
        public void Remove(SoCrm.Services.Security.Contracts.User entity) {
            base.Channel.Remove(entity);
        }
        
        public System.Threading.Tasks.Task RemoveAsync(SoCrm.Services.Security.Contracts.User entity) {
            return base.Channel.RemoveAsync(entity);
        }
    }
}
