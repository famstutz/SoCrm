#LyX 2.0 created this file. For more info see http://www.lyx.org/
\lyxformat 413
\begin_document
\begin_header
\textclass scrbook
\begin_preamble
\usepackage{pdflscape}
\usepackage{footnote}
\makesavenoteenv{tabular}
\end_preamble
\use_default_options true
\maintain_unincluded_children false
\language german-ch
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_amsmath 1
\use_esint 1
\use_mhchem 1
\use_mathdots 1
\cite_engine basic
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date true
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
Vergleich von objektrelationalen Mappern
\end_layout

\begin_layout Author
Florian Amstutz <
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

florian@amstutz.nu
\end_layout

\end_inset

>
\end_layout

\begin_layout Publishers
Bachelorarbeit an der Zürcher Hochschule für Angewandte Wissenschaften
\end_layout

\begin_layout Chapter*
Eidesstattliche Erklärung
\end_layout

\begin_layout Standard
Hiermit bestätigt der Unterzeichnende, dass die Bachelorarbeit mit dem Thema
 
\begin_inset Quotes eld
\end_inset

Vergleich von objektrelationalen Mappern
\begin_inset Quotes erd
\end_inset

 gemäss freigegebener Aufgabenstellung vom 8.
 Januar 2013 ohne jede fremde Hilfe im Rahmen des gültigen Reglements selbständi
g ausgeführt wurde.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
vspace{3em}
\end_layout

\begin_layout Plain Layout


\backslash
noindent Zürich, 
\backslash
today
\end_layout

\begin_layout Plain Layout


\backslash
begin{flushright} 
\end_layout

\begin_layout Plain Layout

$
\backslash
overline{~~~~~~~~~
\backslash
mbox{Florian Amstutz}~~~~~~~~~}$ 
\end_layout

\begin_layout Plain Layout


\backslash
end{flushright}
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset toc
LatexCommand tableofcontents

\end_inset


\end_layout

\begin_layout Chapter
Einführung
\end_layout

\begin_layout Standard
Als einführendes Kapitel dieser Dokumentation wird die Bachelorarbeit als
 Projekt kurz vorgestellt und es werden die Rahmenbedingungen der Arbeit
 zusammengefasst niedergeschrieben.
 Weiter wird die Vorgehensweise für die Bearbeitung dieser Bachelorarbeit
 vorgestellt und erklärt.
 Am Ende dieses Kapitels wird eine Projektplanung erstellt und die wichtigsten
 Meilensteine festgelegt.
\end_layout

\begin_layout Section
Management Summary
\end_layout

\begin_layout Standard
Objektorientierte Programmiersprachen kapseln Daten und Verhalten in Objekten,
 relationale Datenbank verwenden hingegen Tabellen.
 Um zwischen diesen grundverschiedenen Paradigmen übersetzen zu können werden
 objektrelationale Mapper (OR-Mapper
\begin_inset CommandInset nomenclature
LatexCommand nomenclature
symbol "OR-Mapper"
description "Ein OR-Mapper (objektrelationaler Mapper) stellt eine Schicht zwischen Anwendung und Datenbank dar. Der OR-Mapper kümmert sich dabei um das Mapping zwischen Objekten und Zeilen einer Tabelle in der Datenbank."

\end_inset

) verwendet.
 
\end_layout

\begin_layout Standard
Heutige serviceorientierte Architekturen verwenden fast in jedem Fall einen
 Persistenzlayer welcher Objekte in eine Datenbank speichert und sie von
 dort liest.
 Diese Aufgabe wird meist nicht von der Applikation selber übernommen sondern
 durch einen OR-Mapper ausgeführt.
 Es gibt eine Reihe von Einflussfaktoren und Entscheidungskriterien die
 beim Entwurf und der Implementierung von Persistenzkomponenten beachtet
 werden müssen.
 Die Auswahl des passenden OR-Mappers für die jeweilige Architektur ist
 eine der zentralen Fragen, die zu Beginn des Implementierungszyklus einer
 Applikation beantwortet werden muss (nach 
\begin_inset CommandInset citation
LatexCommand cite
key "Starke2011"

\end_inset

), denn oft ist der Persistenzlayer das Nadelöhr einer Enterprise Applikation
 (gemäss 
\begin_inset CommandInset citation
LatexCommand cite
key "Liebhart2007"

\end_inset

) 
\end_layout

\begin_layout Section
Über die Bachelorarbeit
\end_layout

\begin_layout Standard
Gemäss Reglement der ZHAW (siehe 
\begin_inset CommandInset citation
LatexCommand cite
key "Stern2012"

\end_inset

) dient die Bachelorarbeit zum Nachweis der Fähigkeit ein Projekt auf ingenieurs
wissenschaftliche Art und Weise zu bearbeiten.
 Die Bachelorarbeit soll nach den allgemeingültigen Standards für technisch/wiss
enschaftliches Arbeiten verfasst werden.
\end_layout

\begin_layout Standard
Die Bachelorarbeit besteht aus einer konzeptionellen Arbeit und deren Umsetzung.
 Der Schwerpunkt liegt auf dem konzeptionellen Teil, in dem die theoretischen
 und methodischen Grundlagen einer Entwicklung oder eines Konzeptes ausgearbeite
t und dargelegt werden.
 Im Umsetzungsteil erfolgt anschliessend die Beschreibung der Implementierung
 beziehungsweise der Anwendung.
\end_layout

\begin_layout Section
Ziel der Arbeit
\end_layout

\begin_layout Standard
Das Ziel dieser Arbeit besteht darin die Entscheidung zu vereinfachen, welcher
 OR-Mapper in welcher Art von Applikation eingesetzt werden soll.
 Die Entscheidungsgrundlage wird dabei auf Basis von Martin Fowlers Enterprise
 Pattern (siehe 
\begin_inset CommandInset citation
LatexCommand cite
key "Fowler2002"

\end_inset

) erarbeitet, welche heutzutage in jedem grösseren (Software-) System eine
 entscheidene Rolle spielen.
 Es wird pro Enterprise Pattern eine Empfehlung abgegeben werden, welcher
 frei verfügbare und Open-Source OR-Mapper im .NET-Umfeld eingesetzt werden
 soll.
\end_layout

\begin_layout Standard
Zusätzlich zu diesen Vergleichen und den Empfehlungen wird eine serviceorientier
te CRM-Applikation als Proof-of-Concept erstellt.
 Für diese CRM-Applikation werden Anforderungen erhoben, es wird ein Konzept
 erstellt und die Umsetzung wird verifiziert.
\end_layout

\begin_layout Section
Vorgehensweise
\end_layout

\begin_layout Standard
Software lässt sich nach einer Vielzahl von Prozessen und Modellen entwickeln.
 Von iterativen Vorgehen wie Scrum über komplexe und vergleichsweise starre
 Modelle wie RUP
\begin_inset CommandInset nomenclature
LatexCommand nomenclature
symbol "RUP"
description "Der Rational Unified Process ist ein kommerzielles Vorgehensmodell zur Softwareentwicklung von IBM. "

\end_inset

 bis hin zu klassischen, linearen Vorgehen wie dem Wasserfallmodell
\begin_inset CommandInset nomenclature
LatexCommand nomenclature
symbol "Wasserfallmodell"
description "Das Wasserfallmodell ist ein lineares (nicht iteratives) Vorgehensmodell, das in Phasen organisiert wird. Dabei gehen die Phasenergebnisse wie bei einem Wasserfall immer als bindende Vorgaben für die nächsttiefere Phase ein. Im Wasserfallmodell hat jede Phase vordefinierte Start- und Endpunkte mit eindeutig definierten Ergebnissen. "

\end_inset

 oder dem V-Modell
\begin_inset CommandInset nomenclature
LatexCommand nomenclature
symbol "V-Modell"
description "Das V-Modell ist ein Vorgehensmodell in der Softwareentwicklung, bei dem der Softwareentwicklungsprozess in Phasen organisiert wird. Neben diesen Entwicklungsphasen definiert das V-Modell auch das Vorgehen zur Qualitätssicherung (Testen) phasenweise."

\end_inset

.
 Nach 
\begin_inset CommandInset citation
LatexCommand cite
key "Starke2011"

\end_inset

 ist die Auswahl des Entwicklungsprozesses eine der kritischsten Entscheidungen,
 die in einem Softwareprojekt getroffen werden muss.
 Häufig besitzen Unternehmungen bereits etablierte, auf sie zugeschnittene
 Entwicklungsmodelle, die mehr oder weniger gut zur Organisation der Unternehmun
g und dem jeweiligen Projekt passen.
 Ein ungünstig gewählter oder nicht vollständig eingeführter und gelebter
 Entwicklungsprozess ist nach 
\begin_inset CommandInset citation
LatexCommand cite
key "Starke2011"

\end_inset

 einer der Hauptgründe wieso Softwareprojekte mit Qualitätsmängeln, Budgetübersc
hreitungen oder zeitlichen Verzögerungen zu kämpfen haben.
\end_layout

\begin_layout Standard
Für dieses Projekt wurde das Wasserfallmodell als Entwicklungsprozess ausgewählt.
 Das Wasserfallmodell teilt die Softwareentwicklung meist in fünf verschiedene
 Phasen ein (siehe Abbildung 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Wasserfallprozess-nach"

\end_inset

).
 Dabei kann jeweils erst mit der nächsten Phase begonnen werden wenn die
 Lieferergebnisse und die Ergebnisdokumentation der vorhergehenden Phase
 fertiggestellt und abgenommen worden sind.
 Das Wasserfallmodell wurde ausgewählt, da dieses Projekt gut linear abgearbeite
t werden kann und da der Betreuer als einziger externer Stakeholder
\begin_inset CommandInset nomenclature
LatexCommand nomenclature
symbol "Stakeholder"
description "Als Stakeholder (engl.) wird eine Person oder Gruppe bezeichnet, die ein berechtigtes Interesse am Verlauf oder Ergebnis eines Prozesses oder Projektes hat."

\end_inset

 des Projekts zu festdefinierten Zeitpunkten (namtlich dem Kick-Off und
 dem Design-Review) Einfluss auf das Projekt ausüben kann und danach keine
 andere Möglichkeit besitzt, im Projektverlauf zu intervenieren.
 Die grössten Nachteile des Wasserfallmodells sind nach 
\begin_inset CommandInset citation
LatexCommand cite
key "Elmer2005"

\end_inset

 Abgrenzugsprobleme zwischen den einzelnen Phasen sowie die Schwierigkeit
 des Abschlusses einzelner Phasen da diese nur mit viel (in anderen Entwicklungs
modellen unnötigem) Aufwand isoliert von anderen Phasen abgeschlossen werden
 können.
 Dadurch dass der Betreuer nur in der Anforderungs- und Konzeptphase Einfluss
 auf das Projekt nehmen kann und der Student alleinig den Abschluss der
 Phasen steuert und verifiziert sowie den Ablauf der Phasen innerhalb des
 Projekts steuert, können diese Nachteile entschärft werden.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Grafiken/sw-process.png
	scale 75

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Wasserfallprozess nach 
\begin_inset CommandInset citation
LatexCommand cite
key "Hung2007"

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "fig:Wasserfallprozess-nach"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Zu Beginn des Wasserfallmodells steht das Sammeln und Dokumentieren der
 Anforderungen (Requirements) im Vordergrund.
 Wenn die Anforderungen umfänglich und in hohem Detaillierungsgrad niedergeschri
eben sind, werden diese vom Auftraggeber abgenommen und das Projekt geht
 in die Phase Design über.
 Die zu entwickelnde Software wird auf verschiedenen Ebenen von Softwarearchitek
ten entwickelt und eine Blaupause wird erstellt, nach welcher sich die Softwaree
ntwickler in der Implementationsphase zu halten haben.
 Das Design sollte einen Plan beinhalten, welcher die Implementierung der
 Anforderungen aufzeigt.
 
\end_layout

\begin_layout Standard
Wenn das Design fertiggestellt worden ist, wird dieses von den Entwicklern
 in Programmcode umgesetzt.
 Gegen Ende der Implementierungsphase werden die Softwarekomponenten verschieden
er Teams integriert und als Gesamtsystem zum Einsatz gebracht.
 Nachdem die Implementierungs- und Integrationsphase abgeschlossen ist,
 wird das Softwareprodukt getestet und allfällige Fehler aus früheren Phasen
 werden zu diesem Zeitpunkt behoben.
 Danach wird das Softwareprodukt installiert und später in der Wartungsphase
 (Maintenance) um weitere Funktionalitäten erweitert beziehungsweise werden
 neu entdeckte Bugs
\begin_inset CommandInset nomenclature
LatexCommand nomenclature
symbol "Bug"
description "Ein Programm- oder Softwarefehler wird als Bug bezeichnet und beschreibt im Allgemeinen ein fehlerhaftes Verhalten von Computerprogrammen."

\end_inset

 behoben.
\end_layout

\begin_layout Standard
Auch die Struktur dieses Projekts und der dazugehörigen Dokumentation hält
 sich an den Wasserfallprozess nach 
\begin_inset CommandInset citation
LatexCommand cite
key "Hung2007"

\end_inset

 (siehe Tabelle 
\begin_inset CommandInset ref
LatexCommand ref
reference "tab:Zuweisungstablle-der-Phasen"

\end_inset

).
 Die Phase Maintenance wird dabei ausgelassen, da sich die innerhalb des
 Projekts entwickelte Applikation nach Abschluss der Verifizierungsphase
 noch im Protoypenstadium befinden wird und nicht dem Reifegrad einer Applikatio
n entspricht, die in die Wartung übergehen kann.
\end_layout

\begin_layout Standard
\begin_inset Float table
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="5" columns="3">
<features tabularvalignment="middle">
<column alignment="left" valignment="top" width="0">
<column alignment="left" valignment="top" width="0">
<column alignment="left" valignment="top" width="0">
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Phase
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Kapitelüberschrift
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Siehe Seite
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Requirements
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset CommandInset ref
LatexCommand nameref
reference "chap:Anforderungen"

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset CommandInset ref
LatexCommand pageref
reference "chap:Anforderungen"

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Design
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset CommandInset ref
LatexCommand nameref
reference "chap:Konzept-und-Architektur"

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset CommandInset ref
LatexCommand pageref
reference "chap:Konzept-und-Architektur"

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Implementation
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset CommandInset ref
LatexCommand nameref
reference "chap:Implementierung"

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset CommandInset ref
LatexCommand pageref
reference "chap:Implementierung"

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Verification
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset CommandInset ref
LatexCommand nameref
reference "chap:Verifikation"

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset CommandInset ref
LatexCommand pageref
reference "chap:Verifikation"

\end_inset


\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Zuweisungstabelle der Phasen zu Kapiteln in diesem Dokument
\begin_inset CommandInset label
LatexCommand label
name "tab:Zuweisungstablle-der-Phasen"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Projektplanung
\end_layout

\begin_layout Standard
Nach Reglement der ZHAW (siehe 
\begin_inset CommandInset citation
LatexCommand cite
key "Stern2012"

\end_inset

) muss die Bachelorarbeit sechs Monate nach Freigabe beendet sein.
 Um die Planbarkeit der Arbeit zu erhöhen wird das Projekt Bachelorarbeit
 bei Projektstart in einzelne Phasen unterteilt, welche auf die vorgängig
 bekannten Termine als Meilensteine enden.
\end_layout

\begin_layout Standard
Ziel dieser Phasenplanung ist es, möglichst frühzeitig im Verlauf der Bachelorar
beit Teile der erwarteten Resultate sowie der Dokumentation fertiggestellt
 zu haben, so dass das Risiko von Qualitätseinbussen der Abgaberesultate
 durch überhastigtes Fertigstellen, gering ist.
 Ausserdem sinkt das Wahrscheinlichkeit, dass nicht alle erwarteten Resultate
 der Arbeit geliefert werden können, da die Lieferergebnisse bei jeweiligem
 Phasenende schon in abgabefertiger Qualität vorliegen.
\end_layout

\begin_layout Subsection
Phasenplanung
\begin_inset CommandInset label
LatexCommand label
name "sub:Phasenplanung"

\end_inset


\end_layout

\begin_layout Standard
Nach dem Wasserfallmodell wird das Projekt in einzelne Phasen eingeteilt,
 die zu einem bestimmten Zeitpunkt mit vordefinierten Endergebnissen enden.
 Bei Erreichen des Endzeitpunkts und bei Lieferung aller Endergebnisse geht
 das Projekt in die nächste Phase über.
 Die Phasen dieser Bachelorarbeit wurden so modelliert, dass ihr Endzeitpunkt
 möglichst mit dem Erreichen eines Meilensteins zusammenfällt (siehe Tabelle
 
\begin_inset CommandInset ref
LatexCommand ref
reference "tab:Phasenplan"

\end_inset

).
 Das heisst, dass bei Erreichen des Meilensteins die vorhergehende Phase
 zwingend abgeschlossen sein muss.
\end_layout

\begin_layout Standard
Vor dem eigentlichen Projektstart werden geeigeneten Themen für die Bachelorarbe
it evaluiert, ein Betreuer gesucht sowie ein Projektantrag in EBS erfasst.
 Diese Phase endet mit dem Kick-Off-Meeting zwischen Betreuer, Student und
 Studiengangsleitung sowie der formalen Freigabe der Semesterarbeit durch
 die Studiengangsleitung.
 Das Erheben und Dokumentieren der Anforderungen ist die erste Phase der
 eigentlichen Bachelorarbeit und mündet in der Konzepterarbeitung auf Basis
 der Anforderungen.
 Ist das Konzept vollständig abgeschlossen, findet das Design-Review statt,
 bei welchem der Betreuer das Konzept begutachtet und allfällige Anpassungen
 daran vorschlägt.
 Nach Fertigstellung des Konzepts folgt die Implementierungsphase und Testphase,
 nach denen die Arbeit abgegeben werden muss.
 In der letzten Phase des Projekts wird die Präsentation erarbeitet, die
 an der Schlusspräsentation (Meilenstein M5) vorgetragen wird.
\end_layout

\begin_layout Standard
\begin_inset Float table
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="10" columns="4">
<features tabularvalignment="middle">
<column alignment="left" valignment="top" width="5.5cm">
<column alignment="left" valignment="top" width="0">
<column alignment="left" valignment="top" width="0">
<column alignment="left" valignment="top" width="0">
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Phase
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Start
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Ende
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Endet in Meilenstein
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Themenevaluation
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
02.10.2012
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
16.11.2012
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Erstellung der Aufgabenstellung
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
17.11.2012
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
07.01.2013
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
M1
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Erfassen der Anforderungen
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
08.01.2013
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
30.01.2013
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
M2
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Erstellen der Marktübersicht
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
31.01.2013
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
02.03.2013
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Auswahl und Vergleich ausgewählter OR-Mapper
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
03.03.2013
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
28.03.2013
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Implementierung Proof of Concept
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
29.03.2013
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
22.05.2013
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
M3
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Erstellung Produktempfehlung
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
23.05.2013
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
01.06.2013
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Finalisierung Dokumentation
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
02.06.2013
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
17.06.2013
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
M4
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Erarbeiten der Präsentation
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
18.06.2013
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
01.07.2013
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
M5
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Phasenplan
\begin_inset CommandInset label
LatexCommand label
name "tab:Phasenplan"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Meilensteine
\end_layout

\begin_layout Standard
Ein Meilenstein ist ein Ereignis von besonderer Bedeutung und stellt ein
 (Zwischen-) Ziel innerhalb eines Projekts dar.
 Meilensteine werden typischerweise von Personen oder Organisationen ausserhalb
 des Projekts vorgegeben und passen mit den im vorhergehenden Kapitel definierte
n Phasenenden überein.
\end_layout

\begin_layout Standard
Die Meilensteine des Projekts sind in der Tabelle 
\begin_inset CommandInset ref
LatexCommand ref
reference "tab:Meilensteine"

\end_inset

 ersichtlich.
\end_layout

\begin_layout Standard
\begin_inset Float table
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="6" columns="3">
<features tabularvalignment="middle">
<column alignment="left" valignment="top" width="0">
<column alignment="left" valignment="top" width="0">
<column alignment="left" valignment="top" width="0">
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Bezeichner
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Meilenstein
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Datum
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
M1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Freigabe der Arbeit
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
07.01.2013
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
M2
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Kick-Off 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
30.01.2013
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
M3
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Design-Review
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
22.05.2013
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
M4
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Abgabe der Arbeit
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
18.06.2013
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
M5
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Schlusspräsentation
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
02.07.2013
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Meilensteine
\begin_inset CommandInset label
LatexCommand label
name "tab:Meilensteine"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Chapter
Anforderungen
\begin_inset CommandInset label
LatexCommand label
name "chap:Anforderungen"

\end_inset


\end_layout

\begin_layout Standard
In der Phasenplanung (siehe Kapitel 
\begin_inset CommandInset ref
LatexCommand vref
reference "sub:Phasenplanung"

\end_inset

) wurde festgelegt, dass in der ersten Projektphase die Anforderungen erhoben
 und dokumentiert werden.
 Dazu wird zu Beginn dieses Kapitels der Begriff Anforderung definiert und
 es wird auf verschiedene Arten von Anforderungen näher eingegangen.
 Anschliessend werden die Anforderungen an den Persistenzlayer einer serviceorie
ntierten Architektur festgehalten sowie die Anforderungen der betrachteten
 Enterprise Pattern erhoben.
 In einem letzten Schritt wird der Systemkontext der CRM-Applikation beschrieben
 und eingegrenzt sowie die konkreten Anforderungen an die CRM-Applikation
 als Use-Cases
\begin_inset CommandInset nomenclature
LatexCommand nomenclature
symbol "Use-Case"
description "Ein Use-Case (dt. Anwendungsfall) bündelt alle möglichen Szenarien, die eintreten können, wenn ein Akteur versucht, mit Hilfe des betrachteten Systems ein bestimmtes fachliches Ziel zu erreichen. Er beschreibt, was inhaltlich beim Versuch der Zielerreichung passieren kann, und abstrahiert von konkreten technischen Lösungen. Das Ergebnis des Anwendungsfalls kann ein Erfolg oder Fehlschlag/Abbruch sein."

\end_inset

 modelliert und spezifiziert.
\end_layout

\begin_layout Section
Was sind Anforderungen?
\end_layout

\begin_layout Standard
Die erste Phase des Wasserfallmodells beschäftigt sich mit den Anforderungen
 an das zu entwickelnde Softwareprodukt.
 Damit das Entwicklungsprodukt zum Erfolg geführt werden kann, muss zunächst
 bekannt sein, was die Anforderungen an das System sind und diese müssen
 geeignet dokumentiert sein.
 Nach 
\begin_inset CommandInset citation
LatexCommand cite
key "IEEE610.12-1990"

\end_inset

 wird eine Anforderung wie folgt definiert:
\end_layout

\begin_layout Description
Anforderung Eine Anforderung ist:
\end_layout

\begin_deeper
\begin_layout Enumerate
Eine Bedingung oder Fähigkeit, die von einem Benutzer (Person oder System)
 zur Lösung eines Problems oder zur Erreichung eines Ziels benötigt wird.
\end_layout

\begin_layout Enumerate
Eine Bedingung oder Fähigkeit, die ein System oder Teilsystem erfüllen oder
 besitzen muss, um einen Vertrag, eine Norm, eine Spezifikation oder andere,
 formell vorgegebene Dokumente zu erfüllen.
\end_layout

\begin_layout Enumerate
Eine dokumentierte Repräsentation einer Bedingung oder Eigenschaft gemäss
 1.
 oder 2.
\end_layout

\end_deeper
\begin_layout Standard
Die Anforderungen an das im Rahmen dieser Bachelorarbeit zu entwickelnde
 System werden in Use-Case-Diagrammen modellhaft dargestellt und als Use-Case-Sp
ezifikationen ausformuliert.
 Auf eine natürlichsprachige Dokumentation der Anforderungen wird verzichtet,
 da die modellierten Anforderungen innerhalb der Use-Case-Diagramme verständlich
 genug sind und zu den Use-Case-Diagrammen noch detaillierte Use-Case-Spezifikat
ionen vorhanden sind, welche die gesamte Anforderung abdecken.
 
\end_layout

\begin_layout Subsection
Arten von Anforderungen
\begin_inset CommandInset label
LatexCommand label
name "sub:Arten-von-Anforderungen"

\end_inset


\end_layout

\begin_layout Standard
Nach 
\begin_inset CommandInset citation
LatexCommand cite
key "Pohl2011"

\end_inset

 unterscheidet man im Allgemeinen zwischen drei Arten von Anforderungen:
\end_layout

\begin_layout Itemize
Funktionale Anforderungen legen die Funktionalität fest, die das geplante
 System zur Verfügung stellen soll.
 Sie werden typischerweise in Funktions-, Verhaltens- und Strukturanforderungen
 unterteilt.
\end_layout

\begin_layout Itemize
Qualitätsanforderungen legen gewünschte Qualitäten des zu entwickelnden
 Systems fest und beeinflussen häufig in grösserem Umfang als die funktionalen
 Anforderungen die Gestalt der Systemarchitektur.
 Typischerweise beziehen sich Qualitätsanforderungen auf die Performance,
 die Verfügbarkeit, die Zuverlässigkeit, die Skalierbarkeit oder die Portabilitä
t des betrachteten Systems.
 Anforderungen dieses Typs werden häufig auch der Klasse 
\begin_inset Quotes eld
\end_inset

nicht funktionaler Anforderungen
\begin_inset Quotes erd
\end_inset

 zugeordnet.
\end_layout

\begin_layout Itemize
Randbedingungen
\begin_inset Foot
status open

\begin_layout Plain Layout
auch Rahmenbedingungen genannt
\end_layout

\end_inset

 können von den Projektbeteiligten nicht beeinflusst werden.
 Randbedingungen können sich sowohl auf das betrachtete System beziehen
 (z.B.
 
\begin_inset Quotes eld
\end_inset

Das System soll über Webservices mit Aussensysteme kommunizieren
\begin_inset Quotes erd
\end_inset

) als auch auf den Entwicklungsprozess des Systems (z.B.
 
\begin_inset Quotes eld
\end_inset

Das System soll bis spätestens Mitte 2013 am Markt verfügbar sein
\begin_inset Quotes erd
\end_inset

).
 Randbedingungen werden, im Gegensatz zu funktionalen Anforderungen und
 Qualitätsanforderungen, nicht umgesetzt, sondern schränken die Umsetzungsmöglic
hkeiten, das heisst den Lösungsraum im Entwicklungsprozess ein.
\end_layout

\begin_layout Section
Anforderungen Persistenzlayer
\end_layout

\begin_layout Standard
Dieses Kapitel enthält die Anforderungen an den Persistenzlayer einer serviceori
entierten Architektur.
 Diese sind auch gleichzeitig auch Teil der Anforderungen der CRM-Applikation
 (siehe Kapitel 
\begin_inset CommandInset ref
LatexCommand vref
reference "sec:Anforderungen-CRM-Applikation"

\end_inset

).
 
\end_layout

\begin_layout Standard
Anforderungen werden üblicherweise aus Aktorensicht definiert und sind nicht
 auf einen Layer einer Softwarearchitektur spezifiziert.
 Damit jedoch später eine Vergleichsmöglichkeit verschiedener OR-Mapper
 gegeben werden kann müssen, diese im Rahmen dieser Bachelorarbeit jedoch
 auf den Persistenzlayer einer serviceorientierten Softwarearchitektur spezifizi
ert sein.
 Anstelle einer modellbasierten Beschreibung der Anforderungen werden diese
 natürlichsprachig dokumentiert.
 Dazu wird die Satzschablone nach 
\begin_inset CommandInset citation
LatexCommand cite
key "Pohl2011"

\end_inset

 verwendet und die Anforderungen werden in funktionale Anforderungen, Qualitätsa
nforderungen und Randbedingungen aufgeteilt.
\end_layout

\begin_layout Standard
Die Anforderungen stammen aus eigenen Erfahrungen mit serviceorientierten
 Architekturen sowie 
\begin_inset CommandInset citation
LatexCommand cite
key "Liebhart2007"

\end_inset

, 
\begin_inset CommandInset citation
LatexCommand cite
key "Chou2010"

\end_inset

 und 
\begin_inset CommandInset citation
LatexCommand cite
key "Pulier2006"

\end_inset

.
\end_layout

\begin_layout Subsection
Funktionale Anforderungen
\end_layout

\begin_layout Standard
Tabelle 
\begin_inset CommandInset ref
LatexCommand ref
reference "tab:Funktionale-Anforderungen-an"

\end_inset

 enthält die funktionalen Anforderungen in natürlichsprachiger Form an den
 Persistenzlayer einer serviceorientierten Architektur.
 Der Begriff 
\begin_inset Quotes eld
\end_inset

das System
\begin_inset Quotes erd
\end_inset

 steht dabei für den Persistenzlayer als eigenständiges System auf welches
 über einen Webservice
\begin_inset CommandInset nomenclature
LatexCommand nomenclature
symbol "Webservice"
description "Ein Webservice ist eine Softwareanwendung die in beliebigen Anwednungen benutzbar ist. Der Zugriff geschieht dabei über das Simple Object Access Protocol (SOAP) gesteuert, das auf Basis von XML den Remote Procedure Call (RPC) realisiert."

\end_inset

 zugegriffen werden kann.
 
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard
\begin_inset Float table
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="10" columns="2">
<features tabularvalignment="middle">
<column alignment="center" valignment="top" width="0">
<column alignment="left" valignment="top" width="12cm">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Bezeichner
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Anforderung
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
PF1
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Das System muss CRUD-Operationen pro persistierbarer Entität zur Verfügung
 stellen.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
PF2
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Das System muss eine einzelne Instanz einer Entität auf Basis seines Identifikat
ors zurückgeben können.
 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
PF3
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Das System muss alle Instanzen einer Entität zurückgeben können.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
PF4
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Das System muss eine oder mehrer Instanzen einer Entität auf Basis von Suchkrite
rien zurückgeben können.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
PF5
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Das System muss eine einzelne Instanz persistieren können.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
PF6
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Das System muss mehrere Instanzen gleichzeitig persistieren können.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
PF7
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Das System muss eine einzelne Instanz löschen können.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
PF8
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Das System muss mehrere Instanzen gleichzeitig löschen können.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
PF9
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Das System muss dem Administrator die Möglichkeit bieten den Ablauf sämtlicher
 Operationen nachzuverfolgen.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Funktionale Anforderungen an einen Persistenzlayer
\begin_inset CommandInset label
LatexCommand label
name "tab:Funktionale-Anforderungen-an"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Qualitätsanforderungen
\end_layout

\begin_layout Standard
Die Qualitätsanforderungen an den Persistenzlayer einer serviceorientierten
 Architektur beschreiben Anforderungen an die Umstände, unter denen die
 geforderte Funktionalität zu erbringen ist.
 Sie sind in Tabelle 
\begin_inset CommandInset ref
LatexCommand ref
reference "tab:Qualitätsanforderungen-an-den"

\end_inset

 festgehalten.
\end_layout

\begin_layout Standard
Die Abgrenzung zwischen funktionalen und nicht-funktionalen Anforderungen
\begin_inset Foot
status open

\begin_layout Plain Layout
Wie Qualitätsanforderungen auch noch genannt werden
\end_layout

\end_inset

 ist unscharf.
 Sie beschreiben die Art und Weise wie der Persistenzlayer zu implementieren
 ist und geben Bedingungen an die Implementierung vor.
\end_layout

\begin_layout Standard
\align center
\begin_inset Float table
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="6" columns="2">
<features tabularvalignment="middle">
<column alignment="center" valignment="top" width="0">
<column alignment="left" valignment="top" width="12cm">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Bezeichner
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Anforderung
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
PQ1
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Das System muss fähig sein bei sämtlichen Operationen ACID
\begin_inset CommandInset nomenclature
LatexCommand nomenclature
symbol "ACID"
description "ACID steht für Atomicity, Consisistency, Isolation und Durability und beschreibt erwünschte Eigenschaften von Verarbeitungsschritten in Datenbankmanagementssystemen."

\end_inset

 zu garantieren.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
PQ2
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Das System muss die Datenbankmanagementssysteme Microsoft SQL Server und
 Oracle Database unterstützen.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
PQ3
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Das System muss dem Entwickler die Möglichkeit bieten die externe Schnittstelle
 des Systems automatisiert zu testen.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
PQ4
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Das System soll keine Logik auf die Datenbank auslagern.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
PQ5
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Das System muss bestimmte Performancewerte erfüllen
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
footnotemark
\end_layout

\end_inset

.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Qualitätsanforderungen an den Persistenzlayer
\begin_inset CommandInset label
LatexCommand label
name "tab:Qualitätsanforderungen-an-den"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
footnotetext{Im Rahmen dieser Arbeit werden die Performanceanforderungen
 nicht genauer definiert, da insbesondere das Überprüfen deren den Rahmen
 dieser Bachelorarbeit sprengen würde.}
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Randbedingungen
\end_layout

\begin_layout Standard
Der Persistenzlayer einer serviceorientierten Softwarearchitektur muss gewisse
 Randbedingungen erfüllen, welche in Tabelle 
\begin_inset CommandInset ref
LatexCommand ref
reference "tab:Randbedingungen-an-den"

\end_inset

 genauer spezifiziert sind.
 Die Randbedingungen sind Umstände, die zwingend erfüllt werden müssen.
 Wiederum ist die Abgrenzung von den Qualitätsanforderungen schwierig, da
 der Übergang zwischen den zwei Anforderungstypen fliessend ist.
 
\end_layout

\begin_layout Standard
Die Randbedingungen sind Implementierungsvorgaben welche massgeblich dafür
 verantwortlich sind, während der Erarbeitung und Umsetzung des Konzepts
 einen austauschbaren Persistenzlayer zu erhalten, wie dies in der Aufgabenstell
ung der Bachelorarbeit (siehe 
\begin_inset CommandInset citation
LatexCommand cite
key "Amstutz2013"

\end_inset

) gefordert ist.
\end_layout

\begin_layout Standard
\align center
\begin_inset Float table
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="5" columns="2">
<features tabularvalignment="middle">
<column alignment="center" valignment="top" width="0">
<column alignment="left" valignment="top" width="12cm">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Bezeichner
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Anforderung
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
PR1
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Das System muss alle Operationen als XML-basierten Webservice anbieten.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
PR2
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Das System muss dem Entwickler die Möglichkeit bieten ohne Wissen über die
 Datenbank oder datenbanknahe Technologie auf die Operationen zuzugreifen.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
PR3
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Das System muss dem Entwickler für sämtliche Operationen ein Resultat entweder
 in Form der Entität oder den Entitäten oder in Form eines Operationsresultats
 zurückliefern.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
PR4
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Das System muss dem Entwickler die Möglichkeit bieten durch ein anderes
 System (einen anderen Persistenzlayer) austauschbar sein.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Randbedingungen an den Persistenzlayer
\begin_inset CommandInset label
LatexCommand label
name "tab:Randbedingungen-an-den"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Anforderungen Enterprise Pattern
\end_layout

\begin_layout Standard
Dieses Kapitel beeinhaltet die Anforderungen an Martin Fowlers Enterprise
 Pattern Transaction Script, Domain Model, Table Module und Active Record.
 Die Anforderungen stammen sowohl aus 
\begin_inset CommandInset citation
LatexCommand cite
key "Fowler2002"

\end_inset

 als auch aus 
\begin_inset CommandInset citation
LatexCommand cite
key "Starke2011"

\end_inset

, 
\begin_inset CommandInset citation
LatexCommand cite
key "Pulier2006"

\end_inset

, 
\begin_inset CommandInset citation
LatexCommand cite
key "Chou2010"

\end_inset

 und eigenen Erfahrungen im Design und der Entwicklung von serviceorientierten
 Architekturen.
 Anstatt wie in den Arten von Anforderungen (siehe Kapitel 
\begin_inset CommandInset ref
LatexCommand vref
reference "sub:Arten-von-Anforderungen"

\end_inset

) beschrieben, werden die Anforderungen an Enterprise Pattern rein auf funktiona
ler Ebene beschrieben.
 
\end_layout

\begin_layout Standard
Neben den konkreten Anforderungen werden die einzelnen Enterprise Pattern
 auch noch im Detail beschrieben und deren Anwendung im Persistenzlayer
 einer serviceorientierten Architektur erläutert.
 Es hat sich als schwierig herausgestellt aus einem Enterprise Pattern konkrete
 Anforderungen abzuleiten.
 Aus diesem Grund sind die Anforderungen in diesem Kapitel nur rudimentär
 beschrieben.
 Die spätere Evaluierung der OR-Mapper auf Basis dieser Anforderungen (siehe
 Kapitel 
\begin_inset CommandInset ref
LatexCommand vref
reference "sec:Evaluierung-selektierte-OR-Mappe"

\end_inset

) berücksichtigt auch die Beschreibung der einzelnen Enterprise Pattern
 in den folgenden Unterkapiteln.
\end_layout

\begin_layout Subsection
Transaction Script
\end_layout

\begin_layout Standard
Nach 
\begin_inset CommandInset citation
LatexCommand cite
key "Fowler2002"

\end_inset

 organisiert das Transaction Script Pattern die Geschäftslogik nach Prozeduren,
 wobei jede Prozedure einen einzelnen Aufruf der Benutzeroberfläche behandelt.
 Die meisten Geschäftsapplikationen können als eine Reihe von Transaktionen
 betrachtet werden.
 Eine Transaktion kann das Betrachten von Information repräsentieren, eine
 andere Transaktion bearbeitet diese Information.
 Das Transaction Script organisiert die Domänenlogik primär nach Transaktionen
 die der Benutzer auf dem System vornimmt.
 Jede vom Benutzer intiierte Transaktion besitzt ihr eigenes Transaction
 Script, auch wenn dieses in einzelne Subprozeduren aufgebrochen werden
 kann.
\end_layout

\begin_layout Standard
Ein Vorteil des Transaction Scripts besteht darin, dass alle Transaktionen
 absolut atomar ausgeführt werden.
 Der Entwickler muss sich nicht um konkurrierende Transaktionen kümmern,
 da diese jeweils im Kontext eines anderen Transaction Scripts ausgeführt
 werden.
 Je kompliziert die Geschäftslogik jedoch wird, je schwieriger wird es diese
 in einem funktionalen und lesbaren Zustand zu bewahren.
 Das grösste Problem besteht dabei in der Vermeidung von Codeduplizierung
 zwischen Transaktionen.
 Da das Ziel des Transaction Script Patterns es ist, allen Code einer Transaktio
n an einer einzelnen Stelle zusammenzufassen, bedeutet es das all gemeinsamer
 Code potentiell dupliziert wird, wenn während der Entwicklung nicht besonderes
 Augenmerk auf diese Tatsache gelegt wird.
 In grösseren Projekten mit vielen Entwicklern stellt sich dies jedoch bald
 als nahezu unmöglich dar.
\end_layout

\begin_layout Standard
Das Transaction Script ist meist mit dem Command Pattern aufgebaut
\begin_inset Foot
status open

\begin_layout Plain Layout
Mehr zum Command Pattern siehe 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://www.codeproject.com/Articles/15207/Design-Patterns-Command-Pattern
\end_layout

\end_inset


\end_layout

\end_inset

.
 Im Comand Pattern kapselt das Command-Objekt einen Befehl, um es zu ermöglichen
, Operationen z.B.
 in eine Warteschlange zu stellen, Logeinträge zu führen oder auch Operationen
 rückgängig zu machen.
 
\end_layout

\begin_layout Standard
Für simple Geschäftslogik ist das Transaction Script die erste und offensichtlic
he Wahl.
 Wenn allrdings komplexere Geschäftsdomänen im System abgebildet werden,
 so macht es Sinn das Transaction Script in ein Domain Model umzubauen (siehe
 
\begin_inset CommandInset ref
LatexCommand vref
reference "sub:Domain-Model"

\end_inset

).
 
\end_layout

\begin_layout Standard
Tabelle 
\begin_inset CommandInset ref
LatexCommand ref
reference "tab:Anforderungen-Transaction-Script"

\end_inset

 enthält die Anforderungen an den Persistenzlayer einer serviceorientierten
 Architektur bei Verwendung von Transaction Scripts für die Organisation
 der Geschäftslogik.
\end_layout

\begin_layout Standard
\begin_inset Float table
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="3" columns="2">
<features tabularvalignment="middle">
<column alignment="center" valignment="top" width="0">
<column alignment="left" valignment="top" width="12cm">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Bezeichner
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Anforderung
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
T1
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Das System muss alle Datenbankoperationen durch einen dünnen Datenbankwrapper
 direkt an die Datenbank stellen.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
T2
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Das System muss alle Operationen atomar ausführen können.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Anforderungen Transaction Script
\begin_inset CommandInset label
LatexCommand label
name "tab:Anforderungen-Transaction-Script"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Domain Model
\begin_inset CommandInset label
LatexCommand label
name "sub:Domain-Model"

\end_inset


\end_layout

\begin_layout Standard
Das Domain Model ist ein Objektmodell einer Domäne, welches Verhalten und
 Information beeinhaltet (nach 
\begin_inset CommandInset citation
LatexCommand cite
key "Fowler2002"

\end_inset

).
 Die Geschäftslogik kann in einem grossen System sehr komplex sein.
 Ein Domain Model erstellt ein Netzwerk von miteinander verbunden Objekten,
 wobei jedes Objekt für sich selbst eine sinnvolle Einheit ist, egal ob
 das Objekt eine ganze Bestellung repräsentiert oder nur eine Zeile in einem
 Bestellformular.
\end_layout

\begin_layout Standard
Wird ein Domain Model in eine Applikation integriert, so fügt man einen
 komplett neuen Layer von Objekten ein, welche das Geschäftsfeld abbilden,
 in welchem man sich bewegt.
 Die Objekte in einem Domain Model imitieren Daten im Unternehmen und beeinhalte
n die Regeln, nach welchen dieses Unternehmen beziehungsweise seine Prozesse
 funktionieren.
 
\end_layout

\begin_layout Standard
Ein objektorientiertes Domain Model ist häufig dem Datenbankmodell sehr
 ähnlich, wenn es auch einige Unterschiede geben wird.
 Das Domain Model vermischt Daten und Prozesse, hat mehrwertige Attribute
 und ein komplexes Netzwerk von Assoziationen.
 Es benutzt auch sehr viele Mechanismen aus der objektorientierten Entwicklung
 wie zum Beispiel die Vererbung.
 
\end_layout

\begin_layout Standard
Laut 
\begin_inset CommandInset citation
LatexCommand cite
key "Fowler2002"

\end_inset

 gibt es zwei Stile von Domain Models die sich etabliert haben.
 Das simple Domain Model hat sehr grosse Ähnlichkeiten mit dem Datenbankmodell,
 wobei meist ein Domänenobjekt für eine Datenbanktabelle existiert.
 Das reiche Domain Model kann stark vom Datenbankmodell abweichen.
 Es benutzt eine Vielzahl von Design Patterns (siehe 
\begin_inset CommandInset citation
LatexCommand cite
key "Gamma1994"

\end_inset

) und besitzt komplexe Netzwerke von kleinen, miteinander verbundenen Objekten.
 Ein reiches Domain Model ist besser geeignet komplexe Geschäftslogik abzubilden
 aber es ist dafür schwieriger auf die Datenbank zu projeziieren.
 Es benötigt in den meisten Fällen einen mehr oder minder aufwändigen Data
 Mapper
\begin_inset Foot
status open

\begin_layout Plain Layout
Der Data Mapper ist auch ein Enterprise Pattern.
 Mehr dazu unter 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://martinfowler.com/eaaCatalog/dataMapper.html
\end_layout

\end_inset

.
\end_layout

\end_inset

, der meist in einem OR-Mapper implementiert ist.
\end_layout

\begin_layout Standard
Das Domain Model ist stark verbreitet, da heute viele Entwickler lieber
 mit Domänenobjekten arbeiten als mit SQL Daten direkt in der Datenbank
 zu manipulieren.
 Es ist sicher nicht der einfachste Weg Domänenobjekte zu modellieren und
 braucht viel Erfahrung aber die vereinfachte Testbarkeit und Benutzerbarkeit
 macht meist den Nachteil des Modellierens wett.
 Gewöhnt man sich einmal an die Vorteile eines Domain Models so ist es sehr
 schwierig wieder zurück zu einfacheren Datenbankzugriffsmechanismen zu
 wechseln, wie zum Beispiel dem Transaction Script.
\end_layout

\begin_layout Standard
In Tabelle 
\begin_inset CommandInset ref
LatexCommand ref
reference "tab:Anforderungen-Domain-Model"

\end_inset

 sind die Anforderungen an der Persistenzlayer einer serviceorientierten
 Architektur bei Verwendung eines Domain Models enthalten.
\end_layout

\begin_layout Standard
\begin_inset Float table
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="6" columns="2">
<features tabularvalignment="middle">
<column alignment="center" valignment="top" width="0">
<column alignment="left" valignment="top" width="12cm">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Bezeichner
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Anforderung
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
D1
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Das System muss eine minimale Kopplung des Domain Models an andere Layer
 ermöglichen.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
D2
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Das System muss die Möglichkeiten einer Spezifikation bieten, mit welcher
 der Teil eines zu ladenden Objektgraphen beschrieben wird.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
D3
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Das System muss den Entiäten sowohl Informationen wie auch Verhalten zuweisen.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
D4
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Das System soll Design Patterns verwenden um ein reiches Domain Model zu
 erstellen.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
D5
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Das System muss das Domain Model von der Datenbank vollständig entkoppeln.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Anforderungen Domain Model
\begin_inset CommandInset label
LatexCommand label
name "tab:Anforderungen-Domain-Model"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Table Module
\end_layout

\begin_layout Standard
Ein Table Module ist eine einzelne Instanz welches die gesamte Geschäftslogik
 für alle Zeilen einer Datenbanktabelle oder -view beinhaltet (nach 
\begin_inset CommandInset citation
LatexCommand cite
key "Fowler2002"

\end_inset

).
\end_layout

\begin_layout Standard
Eine der zentralen Aspekte der objektorientierten Programmierung ist es,
 Daten mit dem dazugehörigen Verhalten zusammenzufassen.
 Der traditionalle objektorientierte Ansatz basiert auf Objekten mit einer
 eindeutigen Identität.
 Das heisst jede Instanz einer Klasse entspricht einer Zeile einer Datenbank.
 Eines der Probleme des Domain Models ist die Schnittstelle zu relationalen
 Datenbanken.
 Ein Table Module organisiert Geschäftslogik in einer Klasse pro Tabelle
 einer Datenbank und eine einzige Instanz dieser Klasse enthält die verschiedene
n Prozeduren um mit den Daten dieser Tabelle zu interagieren.
\end_layout

\begin_layout Standard
Eine Stärke des Table Modules ist die Möglichkeit des Zusammenfassens von
 Daten und Verhalten zur selben Zeit um vereinfacht mit einer relationalen
 Datenbank zu interagieren.
 Das Table Module verhält sich wie ein ganz normales Objekte, der grosse
 liegt darin Unterschied, dass das Objekt keine Ahnung von der Identität
 der Objekte hat, mit welchen es interagiiert.
 Das heisst, wenn zum Beispiel ein einzelner Kunde gelesen werden soll,
 muss ein Aufruf ähnlich wie CustomerModule.GetCustomer(int customerId) aufgerufe
n werden.
 Jedes Mal wenn mit diesem Kunden mit der ID customerId interagiert werden
 soll, muss eine Art von Identitätsreferenz ans Table Module übergeben werden
 (hier in Form des Integers customerId).
\end_layout

\begin_layout Standard
Die offensichtliche Verwendung des Table Module Patterns besteht darin ein
 Table Module für jede Tabelle der Datenbank zu erstellen.
 Es ist jedoch auch möglich für einzelne Queries oder Views eigene Table
 Modules zu implementieren.
 Das Table Module kann bei jeder Verwendung als neue Instanz erstellt werden
 oder es kann auch als eine Sammlung von statischen Methoden implementiert
 werden.
 Der Vorteil einer Instanz wäre zum Beispiel, dass das Table Module bereits
 mit einem Record Set
\begin_inset Foot
status open

\begin_layout Plain Layout
Mehr zum Record Set auf 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://martinfowler.com/eaaCatalog/recordSet.html
\end_layout

\end_inset


\end_layout

\end_inset

 oder einem bestehenden Resultat eines Queries intialisiert werden könnte.
 Dieses Resultat könnte dann mit der Instanz des Table Modules manipuliert
 werden.
\end_layout

\begin_layout Standard
Das Table Module baut stark auf tabellarischen Daten auf.
 Es macht also Sinn das Table Module im Zusammenhang mit einem Record Set
 zu verwenden.
\end_layout

\begin_layout Standard
Die Anforderungen an das Table Module sind in Tabelle 
\begin_inset CommandInset ref
LatexCommand ref
reference "tab:Anforderungen-Table-Module"

\end_inset

 in natürlichsprachiger Form dokumentiert.
\end_layout

\begin_layout Standard
\begin_inset Float table
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="4" columns="2">
<features tabularvalignment="middle">
<column alignment="center" valignment="top" width="0">
<column alignment="left" valignment="top" width="12cm">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Bezeichner
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Anforderung
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
T1
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Das System muss die Objektstruktur analog der Datenbankstruktur abbilden.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
T2
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Das System muss eine einzelne Instanz zur Verfügung stellen, welche alle
 Geschäftslogik aller Zeilen einer Datenbanktabelle beinhaltet.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
T3
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Das System muss eine einfache Domänenlogik verwenden.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Anforderungen Table Module
\begin_inset CommandInset label
LatexCommand label
name "tab:Anforderungen-Table-Module"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Active Record
\end_layout

\begin_layout Standard
Gemäss 
\begin_inset CommandInset citation
LatexCommand cite
key "Fowler2002"

\end_inset

 kapselt eine Implementierung des Active Record Patterns eine Zeile einer
 Datenbanktabelle oder -view, den Datenbankzugriff und enhält die Geschäftslogik
 im Zusammenhang mit dieser Zeile.
 Ein Objekt enhält Daten und Verhalten.
 Der Grossteil dieser Daten ist persistent und wird in einer Datenbank gespeiche
rt.
 Active Record verwendet diesen Ansatz und fügt die Geschäftslogik dem Domänenob
jekt hinzu.
\end_layout

\begin_layout Standard
Die Essenz von Active Record ist ein simples Domain Model in welchem die
 Domänenobjekte stark mit der darunterliegenden Datenbankstruktur verwandt
 sind.
 Jedes Active Record ist verantwortlich für das Speichern und Laden der
 Objekte aus der Datenbank und auch für jegliche Domänenlogik welche mit
 diesen Objekten verbunden ist.
 Dies kann zum Beispiel sämtliche Domänenlogik der Applikation sein oder
 es kann auch die zwischen Active Records gemeinsame Domänenlogik in Transaction
 Scripts implementiert sein und datenorientierter Code im jeweiligen Active
 Record.
\end_layout

\begin_layout Standard
Die Datenstruktur des Active Records sollte exakt mit der Datenbank übereinstimm
en: ein Feld in der Klasse für eine Spalte in der Tabelle.
 Die Namen der Felder sollten direkt mit denjenigen der Tabelle übereinstimmen,
 es sollte keine Datenkonversion im Active Record implementiert werden.
 Typischerweise bietet das einzelne Active Record folgende Methoden an:
\end_layout

\begin_layout Itemize
Konstruieren einer neue Instanz des Active Records mit dem bestehenden Resultat
 einer SQL Query
\end_layout

\begin_layout Itemize
Konstruieren einer neue Instanz des Active Records welche später in die
 Datenbanktabelle gespeichert wird
\end_layout

\begin_layout Itemize
Statisch Suchmethode welche oft genutzte SQL Queries kapselt und als Active
 Records Objekte zurückgibt
\end_layout

\begin_layout Itemize
Aktualisieren des Active Records mit den aktuellen Werten aus der Datenbank
\end_layout

\begin_layout Itemize
Lesen und Speichern der Felder (Getter- und Setter-Methoden)
\end_layout

\begin_layout Itemize
Implementieren von Teilen der Geschäftslogik
\end_layout

\begin_layout Standard
Active Record ist eine gute Option für relativ simple Geschäftslogik.
 Validierungen auf Basis eines einzelnen Datensatzes funktioniert gut mit
 dieser Stuktur.
 Wird ein Domain Model verwendet so besteht zu Beginn der Konzeptphase die
 Entscheidung zwischen der Verwendung von Active Records oder eines Data
 Mappers.
 Das Active Record hat den Vorteil der Einfachheit, wird das Domain Model
 komplex und es werden zusätzliche Beziehungen, Felder, Vererbung oder Listen
 hinzugefügt wird das Active Record schnell unübersichtlich und ein Data
 Mapper ist einfacher zu verwenden.
\end_layout

\begin_layout Standard
Die Anforderungen an den Persistzenlayer einer serviceorientierten Architektur
 in Bezug auf das Active Record Pattern sind in Tabelle 
\begin_inset CommandInset ref
LatexCommand ref
reference "tab:Anforderungen-Active-Record"

\end_inset

 festgehalten.
\end_layout

\begin_layout Standard
\begin_inset Float table
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="4" columns="2">
<features tabularvalignment="middle">
<column alignment="center" valignment="top" width="0">
<column alignment="left" valignment="top" width="12cm">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Bezeichner
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Anforderung
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
A1
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Das System muss die Objektstruktur analog der Datenbankstruktur abbilden.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
A2
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Das System muss keine Konversion von Objektdatentypen und Datentypen der
 Datenbanktablle verwenden.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
A3
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Das System muss eine einfache Domänenlogik verwenden.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Anforderungen Active Record
\begin_inset CommandInset label
LatexCommand label
name "tab:Anforderungen-Active-Record"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Anforderungen CRM-Applikation
\begin_inset CommandInset label
LatexCommand label
name "sec:Anforderungen-CRM-Applikation"

\end_inset


\end_layout

\begin_layout Standard
Ein Teil dieser Bachelorarbeit besteht darin ein Proof-of-Concept einer
 serviceorientierten Architektur zu erstellen.
 Dies einerseits um die Anforderungen aus den vorhergehenden Kapiteln zu
 überprüfen aber auch um Erfahrung mit den verschiedenen OR-Mappern zu sammeln,
 welche im Rahmen dieser Arbeit miteinander verglichen werden.
\end_layout

\begin_layout Standard
Da das Proof-of-Concept einen grossen Teil der aufgewendeten Stunden für
 diese Bachelorarbeit ausmacht, wird Wert darauf gelegt, dass die Applikation
 methodisch entwickelt wird.
 Die folgenden Kapitel beschreiben daher ausführlich die Anforderungen an
 die CRM-Applikation als Proof-of-Concept.
\end_layout

\begin_layout Subsection
Systemkontext
\end_layout

\begin_layout Standard
Als erster Schritt in der Erhebung und Dokumentierung der Anforderung wird
 der Systemkontext ermittelt.
 Es wird eine Sollperspektive eingenommen, das heisst, es wird eine Annahme
 getroffen, wie sich das geplante System in die Realität integrieren wird.
 Hierdurch wird der Realitätsausschnitt identifiziert, der das System und
 damit potenziell auch dessen Anforderungen beeinflusst.
 Um die Anforderungen an das geplante System korrekt und vollständig spezifizier
en zu können, ist es notwendig, die Beziehung zwischen den einzelnen materiellen
 und immateriellen Aspekten im Systemkontext und dem geplanten System exakt
 zu definieren.
 Der für die Anforderungen des Systems relevante Ausschnitt der Realität
 wird als Systemkontext bezeichnet (nach 
\begin_inset CommandInset citation
LatexCommand cite
key "Pohl2011"

\end_inset

).
\end_layout

\begin_layout Standard
Der Ursprung der Anforderungen des Systems liegt im Systemkontext des geplanten
 Systems.
 Aus diesem Grund wird der Systemkontext vor Erhebung und Dokumentierung
 der Anforderungen festgelegt.
 Der Systemkontext des Systems CRM-Applikation ist in Abbildung 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Systemkontext"

\end_inset

 als Modell dargestellt.
\end_layout

\begin_layout Standard
Die Benutzer als Stakeholder an das System erfassen Kunden und Kontakte
 und befinden sich innerhalb des Systemkontexts, da sie direkt mit dem System
 interagieren.
 Die Geschäftsprozesse, welche im Umgang mit dem Kunden und Kontakten eingehalte
n werden müssen, geben Workflows als Rahmenbedingungen vor.
 Diese Prozesse sind in der Geschäftslogik spezifiziert und interagieren
 über diese Workflows mit dem System.
 Der Administrator verwaltet die Benutzer des Systems.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Grafiken/Systemkontext.png
	scale 50

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Systemkontext
\begin_inset CommandInset label
LatexCommand label
name "fig:Systemkontext"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Use-Case-Spezifikationen
\end_layout

\begin_layout Standard
Nach 
\begin_inset CommandInset citation
LatexCommand cite
key "Pohl2011"

\end_inset

 zeigen Use-Case-Diagamme die aus einer externen Nutzungssicht wesentlichen
 Funktionalitäten des betrachteten Systems sowie spezifische Beziehungen
 der einzelnen Funktionalitäten untereinander beziehungsweise zu Aspekten
 in der Umgebung des Systems.
 Abgesehen vom Namen des Use-Cases und dessen Beziehungen dokumentieren
 Use-Case-Diagramme keinerlei weitere Informationen über die einzelnen Use-Cases
, wie z.B.
 die Systematik der Interaktion eines Use-Cases mit Akteuren in der Umgebung.
 Diese Informationen werden unter Verwendung einer geeigneten Schablone
 zusätzlich zum Use-Case-Diagramm textuell als Use-Case-Spezifikation festgehalt
en.
\end_layout

\begin_layout Standard
Alle funktionalen Anforderungen (siehe Kapitel 
\begin_inset CommandInset ref
LatexCommand vref
reference "sub:Arten-von-Anforderungen"

\end_inset

) werden als Use-Cases modelliert und spezifiziert
\begin_inset Foot
status open

\begin_layout Plain Layout
Die verwendete Schablone stammt aus 
\begin_inset CommandInset citation
LatexCommand cite
key "Pohl2011"

\end_inset

 und dient zur zweckmässigen Strukturierung von Typen von Informationen,
 die einen Use-Case betreffen.
 Die vorgeschlagenen Abschnitte der Schablone Autor, Quelle, Verantwortlicher
 und Qualität werden ausgelassen, da sie im Rahmen dieses Projekts keinen
 zusätzlichen Nutzen bringen.
\end_layout

\end_inset

.
 Als Quellen der Anforderungen dienen der Betreuer, das Reglement der ZHAW
 betreffend der Bachelorarbeit sowie der Student in der Rolle des Benutzers
 des Systems.
 Zusätzlich zu den Use-Cases und den dazugehörigen Use-Case-Spezifikationen
 wird vorgängig in Prosatext der Anwendungsfall beschrieben.
 Aus Gründen der Übersichtlichkeit und der limitierten Gesamtfunktionaliät
 des Systems stellen diese Use-Cases die primären Anforderungen an das zu
 entwickelnde Softwaresystem dar.
 
\end_layout

\begin_layout Subsubsection
Benutzer oder Administrator authentifizieren
\begin_inset CommandInset label
LatexCommand label
name "sub:Benutzer-oder-Administrator"

\end_inset


\end_layout

\begin_layout Standard
Ein Benutzer oder Administrator möchte mit dem System interagieren und authentif
iziert sich dazu mit seinem Benutzernamen und Passwort beim System.
 Das System prüft den eingegebenen Benutzernamen und das Passwort und der
 Benutzer oder Administrator wird authentifziert falls diese dem System
 bekannt sind.
 Er kann nun weitere Aktionen mit dem System tätigen.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Grafiken/UC1-BenutzerOderAdministratorAuthentifizieren.png
	scale 50

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Use-Case Benutzer oder Administrator authentifizieren
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float table
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="14" columns="2">
<features tabularvalignment="middle">
<column alignment="left" valignment="top" width="0">
<column alignment="left" valignment="top" width="10cm">
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Abschnitt
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Inhalt
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Bezeichner
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
UC1
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Name
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Benutzer oder Administrator authentifizieren
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Priorität
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Wichtigkeit für Systemerfolg: hoch
\begin_inset Newline newline
\end_inset

Technologisches Risiko: mittel
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Kritikalität
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Hoch
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Beschreibung
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Der Benutzer oder Administrator authentifiziert sich beim System.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Auslösendes Ereignis
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Der Benutzer oder Administrator möchte mit dem System interagieren.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Akteure
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Benutzer, Administrator
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Vorbedingung
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Der Benutzer oder Administrator ist nicht schon beim System authentifiziert.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Nachbedingung
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Der Benutzer oder Administrator ist authentifziert und kann mit dem System
 interagieren.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Ergebnis
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Eine Authentifikation wird ausgestellt.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Hauptszenario
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1.
 Der Benutzer oder Administrator gibt seinen Benutzernamen und Passwort
 ein.
\end_layout

\begin_layout Plain Layout
2.
 Der Benutzer oder Administrator erfragt die Authentifizierung vom System.
\end_layout

\begin_layout Plain Layout
3.
 Das System erstellt eine Authentifikation und übergibt diese dem Benutzer
 oder Administrator.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Alternativszenarien
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2a.
 Der Benutzername oder das Passwort ist nicht korrekt.
\end_layout

\begin_layout Plain Layout
2a1.
 Der Benutzer oder Administrator wird aufgefordert seinen Benutzernamen
 und Passwort zu überprüfen und erneut einzugeben.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Ausnahmeszenarien
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Auslösendes Ereignis: Der Benutzer oder Administrator kann keine Verbindung
 zum System herstellen.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Use-Case-Spezifikation Benutzer oder Administrator authentifizieren
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Kunden anzeigen
\begin_inset CommandInset label
LatexCommand label
name "sub:Kunden-anzeigen"

\end_inset


\end_layout

\begin_layout Standard
Der Benutzer ist beim System authentifiziert und zeigt eine Liste aller
 im System gespeicherten Kunden an.
 Der Benutzer kann die Liste über verschiedene Suchkriterien (Name des Kunden
 und Arbeitgeber) einschränken und mit den gefundenen Kunden interagieren.
 So kann er zum Beispiel neue Kontakte für die gefundenen Kunden hinzufügen
 oder den Kunden aus dem System löschen.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Grafiken/UC2-KundenAnzeigen.png
	scale 50

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Use-Case Kunden anzeigen
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float table
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="14" columns="2">
<features tabularvalignment="middle">
<column alignment="left" valignment="top" width="0">
<column alignment="left" valignment="top" width="10cm">
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Abschnitt
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Inhalt
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Bezeichner
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
UC2
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Name
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Kunden anzeigen
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Priorität
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Wichtigkeit für Systemerfolg: hoch
\begin_inset Newline newline
\end_inset

Technologisches Risiko: niedrig
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Kritikalität
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Hoch
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Beschreibung
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Der Benutzer zeigt eine Liste aller Kunden an.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Auslösendes Ereignis
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Der Benutzer möchte eine Liste aller Kunden anzeigen.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Akteure
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Benutzer
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Vorbedingung
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Der Benutzer ist beim System authentifiziert.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Nachbedingung
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Der Benutzer kann für einen angezeigten Kunden einen Kontakt erfassen oder
 den Kunden löschen.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Ergebnis
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Eine Liste mit Kunden wird angezeigt.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Hauptszenario
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1.
 Der Benutzer gibt den Vor- oder Nachnamen des zu suchenden Kunden ein.
\end_layout

\begin_layout Plain Layout
2.
 Der Benutzer gibt den Namen des Arbeitgebers des zu suchenden Kunden ein.
\end_layout

\begin_layout Plain Layout
3.
 Das System zeigt dem Benutzer die passenden Kunden an.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Alternativszenarien
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1a.
 Der Benutzer gibt keinen Namen ein.
\end_layout

\begin_layout Plain Layout
2a.
 Der Benutzer gibt keinen Firmennamen ein.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Ausnahmeszenarien
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Keine
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Use-Case-Spezifikation Kunden anzeigen
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Kunde hinzufügen
\end_layout

\begin_layout Standard
Der Benutzer fügt dem System einen neuen Kunden hinzu.
 Jeder Kunde hat neben Vor- und Nachnamen eine Adresse und einen Arbeitgeber.
 Ist der Arbeitgeber noch nicht als Firma im System eingetragen, so kann
 sie beim Erstellen des Kunden hinzugefügt werden.
 Zusätzlich kann jedem Kunden eine oder mehrere E-Mail-Adressen sowie eine
 oder mehrere Telefonnummern hinzugefügt werden.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Grafiken/UC3-KundeHinzufügen.png
	scale 50

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Use-Case Kunde hinzufügen
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float table
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="14" columns="2">
<features tabularvalignment="middle">
<column alignment="left" valignment="top" width="0">
<column alignment="left" valignment="top" width="10cm">
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Abschnitt
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Inhalt
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Bezeichner
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
UC3
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Name
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Kunde hinzufügen
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Priorität
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Wichtigkeit für Systemerfolg: hoch
\begin_inset Newline newline
\end_inset

Technologisches Risiko: niedrig
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Kritikalität
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Mittel
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Beschreibung
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Der Benutzer fügt dem System einen neuen Kunden hinzu.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Auslösendes Ereignis
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Der Benutzer möchte dem System einen neuen Kunden hinzufügen.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Akteure
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Benutzer
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Vorbedingung
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Der Benutzer ist beim System authentifiziert.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Nachbedingung
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Der Benutzer kann für den neu hinzugefügten Kunden Kontakte erfassen.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Ergebnis
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Der neu hinzugefügte Kunde wird angezeigt.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Hauptszenario
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1.
 Der Benutzer gibt den Namen sowie Adresse des Kunden ein.
\end_layout

\begin_layout Plain Layout
2.
 Der Benutzer wählt den Arbeitgeber des neuen Kunden aus.
\end_layout

\begin_layout Plain Layout
3.
 Der Benutzer fügt eine oder mehrere E-Mail-Adressen dem Kunden hinzu.
\end_layout

\begin_layout Plain Layout
4.
 Der Benutzer fügt eine oder mehrere Telefonnummern dem Kunden hinzu.
\end_layout

\begin_layout Plain Layout
5.
 Der Benutzer speichert den Kunden und dieser wird ihm angezeigt.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Alternativszenarien
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2a.
 Der Arbeitgeber existiert nicht.
 Der Benutzer kann diesen als Firma erfassen (siehe Kapitel 
\begin_inset CommandInset ref
LatexCommand vref
reference "sub:Firma-hinzufügen"

\end_inset

).
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Ausnahmeszenarien
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Auslösenden Ereignis: Der Kunde existiert schon.
 Der Benutzer wird aufgefordert zu überprüfen ob die Daten fehlerhaft eingetrage
n wurden oder ob dieser Kunde ein Duplikat darstellt.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Use-Case-Spezifikation Kunde hinzufügen
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Kunde löschen
\end_layout

\begin_layout Standard
Der Anwendungsfall 
\begin_inset Quotes eld
\end_inset

Kunde löschen
\begin_inset Quotes erd
\end_inset

 wird ausgeführt wenn ein Benutzer einen im System erfassten Kunden löschen
 möchte.
 Besitzt dieser Kunde Kontakte so werden diese mit dem Kunden zusammen gelöscht.
 Gelöschte Kunden und ihre dazugehörigen Kontakte sind unwiderbringlich
 verloren und können nicht wiederhergestellt werden.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Grafiken/UC4-KundeLöschen.png
	scale 50

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Use-Case Kunde löschen
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float table
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="14" columns="2">
<features tabularvalignment="middle">
<column alignment="left" valignment="top" width="0">
<column alignment="left" valignment="top" width="10cm">
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Abschnitt
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Inhalt
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Bezeichner
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
UC4
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Name
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Kunde löschen
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Priorität
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Wichtigkeit für Systemerfolg: mittel
\begin_inset Newline newline
\end_inset

Technologisches Risiko: niedrig
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Kritikalität
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Hoch
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Beschreibung
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Der Benutzer löscht einen Kunden aus dem System.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Auslösendes Ereignis
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Der Benutzer möchte einen Kunden aus dem System löschen.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Akteure
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Benutzer
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Vorbedingung
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Der Benutzer ist beim System authentifiziert.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Nachbedingung
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Der Benutzer kann für den gelöschten Kunden keine Kontakte mehr erfassen
 und findet diesen nicht mehr im System (siehe Kapitel 
\begin_inset CommandInset ref
LatexCommand vref
reference "sub:Kunden-anzeigen"

\end_inset

).
 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Ergebnis
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Die Löschung wird bestätigt.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Hauptszenario
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1.
 Der Benutzer wählt den zu löschenden Kunden aus.
\end_layout

\begin_layout Plain Layout
2.
 Der Kunde wird vom System gelöscht.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Alternativszenarien
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1a.
 Falls der Kunde Kontakte besitzt, wird der Benutzer darauf hingewiesen,
 dass auch die zum Kunden gehörigen Kontakte gelöscht werden.
 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Ausnahmeszenarien
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Keine.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Use-Case-Spezifikation Kunde löschen
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Firmen anzeigen
\begin_inset CommandInset label
LatexCommand label
name "sub:Firmen-anzeigen"

\end_inset


\end_layout

\begin_layout Standard
Der Benutzer ist beim System authentifiziert und zeigt eine Liste aller
 im System gespeicherten Firmen an.
 Jeder Firma können Kunden hinzugefügt werdne, mit welchen wiederum Kontakte
 generiert werden können.
 Der Benutzer kann die Liste aller Firmen nach verschiedenen Suchkriterien
 (Firmenname und Land) filtern und mit den gefundenen Firmen interagieren.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Grafiken/UC5-FirmenAnzeigen.png
	scale 50

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Use-Case Firmen anzeigen
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float table
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="14" columns="2">
<features tabularvalignment="middle">
<column alignment="left" valignment="top" width="0">
<column alignment="left" valignment="top" width="10cm">
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Abschnitt
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Inhalt
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Bezeichner
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
UC5
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Name
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Firmen anzeigen
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Priorität
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Wichtigkeit für Systemerfolg: mittel
\begin_inset Newline newline
\end_inset

Technologisches Risiko: niedrig
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Kritikalität
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Mittel
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Beschreibung
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Der Benutzer zeigt eine Liste aller Firmen an.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Auslösendes Ereignis
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Der Benutzer möchte eine Liste aller Firmen anzeigen.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Akteure
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Benutzer
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Vorbedingung
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Der Benutzer ist beim System authentifiziert.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Nachbedingung
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Der Benutzer kann für eine angezeigte Firma einen Kunden hinzufügen oder
 die Firma löschen.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Ergebnis
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Eine Liste mit Firmen wird angezeigt.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Hauptszenario
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1.
 Der Benutzer gibt den Namen der zu suchenden Firma ein.
\end_layout

\begin_layout Plain Layout
2.
 Der Benutzer gibt das Land der zu suchenden Firma ein.
 
\end_layout

\begin_layout Plain Layout
3.
 Das System zeigt dem Benutzer die passenden Firmen an.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Alternativszenarien
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1a.
 Der Benutzer gibt keinen Namen ein.
\end_layout

\begin_layout Plain Layout
2a.
 Der Benutzer gibt kein Land an.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Ausnahmeszenarien
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Keine.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Use-Case-Spezifikation Firmen anzeigen
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Firma hinzufügen
\begin_inset CommandInset label
LatexCommand label
name "sub:Firma-hinzufügen"

\end_inset


\end_layout

\begin_layout Standard
Der Benutzer möchte eine neue Firma dem System hinzufügen.
 Kontakte können nur auf Mitarbeitern von Firmen erfasst werden.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Grafiken/UC6-FirmaHinzufügen.png
	scale 50

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Use-Case Firma hinzufügen
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float table
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="14" columns="2">
<features tabularvalignment="middle">
<column alignment="left" valignment="top" width="0">
<column alignment="left" valignment="top" width="10cm">
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Abschnitt
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Inhalt
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Bezeichner
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
UC6
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Name
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Firma hinzufügen
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Priorität
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Wichtigkeit für Systemerfolg: mittel
\begin_inset Newline newline
\end_inset

Technologisches Risiko: niedrig
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Kritikalität
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Mittel
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Beschreibung
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Der Benutzer fügt eine neue Firma hinzu.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Auslösendes Ereignis
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Der Benutzer möchte eine neue Firma hinzufügen.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Akteure
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Benutzer
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Vorbedingung
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Der Benutzer ist beim System authentifiziert.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Nachbedingung
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Der Benutzer kann der neu hinzugefügten Firma Kunden (Mitarbeiter) hinzufügen.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Ergebnis
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Die hinzugefügte Firma wird angezeigt.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Hauptszenario
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1.
 Der Benutzer gibt den Namen sowie Adresse der Firma ein.
\end_layout

\begin_layout Plain Layout
2.
 Der Benutzer speichert die Firma und diese wird ihm angezeigt.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Alternativszenarien
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1a.
 Die Firma existiert bereits.
 Der Benutzer wird aufgefordert zu überprüfen ob die Daten fehlerhaft eingetrage
n wurden oder ob diese Firma dies ein Duplikat darstellt.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Ausnahmeszenarien
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Keine
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Use-Case-Spezifikation Firma hinzufügen
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Firma löschen
\end_layout

\begin_layout Standard
Wenn der Benutzer eine Firma löschen möchte, wird dieser Anwendungsfall
 ausgeführt.
 Besitzt diese Firma Angestellte so werden diese mit der Firma zusammen
 gelöscht.
 Besitzen dei Angestellte Kontakte so werden die Kontakte mit dem Angestellten
 zusammen gelöscht.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Grafiken/UC7-FirmaLöschen.png
	scale 50

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Use-Case Firma löschen
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float table
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="14" columns="2">
<features tabularvalignment="middle">
<column alignment="left" valignment="top" width="0">
<column alignment="left" valignment="top" width="10cm">
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Abschnitt
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Inhalt
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Bezeichner
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
UC7
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Name
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Firma löschen
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Priorität
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Wichtigkeit für Systemerfolg: niedrig
\begin_inset Newline newline
\end_inset

Technologisches Risiko: mittel
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Kritikalität
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Mittel
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Beschreibung
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Der Benutzer löscht eine Firma.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Auslösendes Ereignis
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Der Benutzer möchte eine Firma löschen.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Akteure
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Benutzer
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Vorbedingung
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Der Benutzer ist beim System authentifiziert.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Nachbedingung
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Der Benutzer kann der gelöschten Firma keine Mitarbeiter mehr hinzufügen
 und findet diese auch nicht mehr (siehe Kapitel 
\begin_inset CommandInset ref
LatexCommand vref
reference "sub:Firmen-anzeigen"

\end_inset

).
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Ergebnis
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Die Löschung wird bestätigt.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Hauptszenario
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1.
 Der Benutzer wählt die zu löschende Firma aus.
\end_layout

\begin_layout Plain Layout
2.
 Die Firma wird vom System gelöscht.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Alternativszenarien
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1a.
 Falls die Firma Angestellte besitzt (Kunden) wird der Benutzer darauf hingewies
en dass auch die zur Firma gehörigen Angestellten gelöscht werden.
\end_layout

\begin_layout Plain Layout
1b.
 Falls der Angestellte Kontakte besitzt wird der Benutzer darauf hingewiesen
 dass auch die zum Angestellten gehörigen Kontakte gelöscht werden.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Ausnahmeszenarien
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Keine.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Use-Case-Spezifikation Firma löschen
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Kontakte anzeigen
\begin_inset CommandInset label
LatexCommand label
name "sub:Kontakte-anzeigen"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Grafiken/UC8-KontakteAnzeigen.png
	scale 50

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Use-Case Kontakte anzeigen
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float table
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="14" columns="2">
<features tabularvalignment="middle">
<column alignment="left" valignment="top" width="0">
<column alignment="left" valignment="top" width="10cm">
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Abschnitt
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Inhalt
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Bezeichner
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
UC8
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Name
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Kontakte anzeigen
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Priorität
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Wichtigkeit für Systemerfolg: hoch
\begin_inset Newline newline
\end_inset

Technologisches Risiko: niedrig
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Kritikalität
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Niedrig
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Beschreibung
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Der Benutzer zeigt eine Liste aller Kontakte an.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Auslösendes Ereignis
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Der Benutzer möchte eine Liste aller Kontakte anzeigen.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Akteure
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Benutzer
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Vorbedingung
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Der Benutzer ist beim System authentifiziert.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Nachbedingung
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Der Benutzer kann einen angezeigten Kontakt detaillierter betrachten oder
 den Kontakt löschen.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Ergebnis
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Eine Liste mit Kontakten wird angezeigt.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Hauptszenario
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1.
 Der Benutzer gibt den Vor- oder Nachnamen des Kunden an, dessen Kontakte
 er suche möchte.
\end_layout

\begin_layout Plain Layout
2.
 Der Benutzer wählt das Kontaktmedium aus, über welches der Kontakt mit
 dem Kunden zustandegekommen ist.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Alternativszenarien
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1a.
 Der Benutzer gibt keine Namen ein.
\end_layout

\begin_layout Plain Layout
2a.
 Der Benutzer wählt kein Kontaktmedium aus.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Ausnahmeszenarien
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Keine.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Use-Case-Spezifikation Kontakte anzeigen
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Kontakt hinzufügen
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Grafiken/UC9-KontaktHinzufügen.png
	scale 50

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Use-Case Kontakt hinzufügen
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float table
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="14" columns="2">
<features tabularvalignment="middle">
<column alignment="left" valignment="top" width="0">
<column alignment="left" valignment="top" width="10cm">
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Abschnitt
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Inhalt
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Bezeichner
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
UC9
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Name
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Kontakt hinzufügen
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Priorität
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Wichtigkeit für Systemerfolg: hoch
\begin_inset Newline newline
\end_inset

Technologisches Risiko: niedrig
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Kritikalität
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Niedrig
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Beschreibung
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Der Benutzer erfasst einen neuen Kontakt für einen Kunden.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Auslösendes Ereignis
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Der Benutzer möchte einen neuen Kontakt für einen Kunden erfassen.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Akteure
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Benutzer
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Vorbedingung
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Der Benutzer ist beim System authentifiziert.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Nachbedingung
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Der Kontakt ist dem System hinzugefügt.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Ergebnis
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Der hinzugefügte Kontakt wird angezeigt.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Hauptszenario
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1.
 Der Benutzer wählt den Kontaktzeitpunkt, das Kontaktmedium und den Inhalt
 des Kontakts aus.
\end_layout

\begin_layout Plain Layout
2.
 Der Benutzer speichert den Kontakt und dieser wird ihm angezeigt.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Alternativszenarien
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Keine.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Ausnahmeszenarien
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Keine.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Use-Case-Spezifikation Kontakt hinzufügen.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Kontakt löschen
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Grafiken/UC10-KontaktLöschen.png
	scale 50

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Use-Case Kontakt löschen
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float table
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="14" columns="2">
<features tabularvalignment="middle">
<column alignment="left" valignment="top" width="0">
<column alignment="left" valignment="top" width="10cm">
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Abschnitt
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Inhalt
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Bezeichner
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
UC10
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Name
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Kontakt löschen
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Priorität
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Wichtigkeit für Systemerfolg: niedrig
\begin_inset Newline newline
\end_inset

Technologisches Risiko: mittel
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Kritikalität
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Mittel
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Beschreibung
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Der Benutzer löscht einen Kontakt.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Auslösendes Ereignis
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Der Benutzer möchte einen Kontakt löschen.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Akteure
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Benutzer
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Vorbedingung
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Der Benutzer ist beim System authentifiziert.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Nachbedingung
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Der Benutzer kann den Kontakt nicht mehr finden (siehe Kapitel 
\begin_inset CommandInset ref
LatexCommand vref
reference "sub:Kontakte-anzeigen"

\end_inset

).
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Ergebnis
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Die Löschung wird bestätigt.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Hauptszenario
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1.
 Der Benutzer wählt den zu löschenden Kontakt aus.
\end_layout

\begin_layout Plain Layout
2.
 Der Kontakt wird vom System gelöscht.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Alternativszenarien
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Keine.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Ausnahmeszenarien
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Keine.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Use-Case-Spezifikation Kontakt löschen
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Benutzer anzeigen
\begin_inset CommandInset label
LatexCommand label
name "sub:Benutzer-anzeigen"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Grafiken/UC11-BenutzerAnzeigen.png
	scale 50

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Use-Case Benutzer anzeigen
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float table
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="14" columns="2">
<features tabularvalignment="middle">
<column alignment="left" valignment="top" width="0">
<column alignment="left" valignment="top" width="10cm">
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Abschnitt
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Inhalt
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Bezeichner
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
UC11
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Name
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Benutzer anzeigen
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Priorität
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Wichtigkeit für Systemerfolg: mittel
\begin_inset Newline newline
\end_inset

Technologisches Risiko: niedrig
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Kritikalität
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Niedrig
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Beschreibung
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Der Administrator zeigt eine Liste aller Benutzer an.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Auslösendes Ereignis
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Der Administrator möchte eine Liste aller Benutzer anzeigen.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Akteure
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Administrator
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Vorbedingung
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Der Administrator ist beim System authentifiziert.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Nachbedingung
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Der Administrator kann einen angezeigten Benutzer detaillierter betrachten
 oder den Benutzer löschen.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Ergebnis
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Eine Liste mit Benutzern wird angezeigt.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Hauptszenario
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1.
 Der Administrator gibt den Benutzernamen des Benutzers an, den er suchen
 möchte.
\end_layout

\begin_layout Plain Layout
2.
 Der Administrator wählt die Rolle aus, die die zu suchenden Benutzer innehaben.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Alternativszenarien
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1a.
 Der Administrator gibt keinen Benutzernamen ein.
\end_layout

\begin_layout Plain Layout
2a.
 Der Administrator wählt keine Rolle aus.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Ausnahmeszenarien
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Keine.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Use-Case-Spezifikation Benutzer anzeigen
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Passwort setzen
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Grafiken/UC12-PasswortSetzen.png
	scale 50

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Use-Case Passwort setzen
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float table
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="14" columns="2">
<features tabularvalignment="middle">
<column alignment="left" valignment="top" width="0">
<column alignment="left" valignment="top" width="10cm">
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Abschnitt
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Inhalt
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Bezeichner
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
UC12
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Name
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Passwort setzen
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Priorität
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Wichtigkeit für Systemerfolg: niedrig
\begin_inset Newline newline
\end_inset

Technologisches Risiko: niedrig
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Kritikalität
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Mittel
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Beschreibung
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Der Benutzer setzt sein eigenes Passwort.
 Der Administrator setzt sein eigenes oder dasjenigen jedes anderen Benutzers.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Auslösendes Ereignis
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Der Benutzer möchte sein eigenes Passwort setzen.
 Der Administrator möchten sein eigenes oder dasjenigen jedes anderen Benutzers
 setzen.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Akteure
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Benutzer, Administrator
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Vorbedingung
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Der Benutzer oder Administrator ist beim System authentifiziert.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Nachbedingung
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Der Benutzer oder Administrator kann sich mit seinem neuen Passwort beim
 System authentifizieren.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Ergebnis
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Eine Bestätigung wird angezeigt.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Hauptszenario
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1.
 Der Benutzer gibt sein altes Passwort sowie das neue Passwort ein.
\end_layout

\begin_layout Plain Layout
2.
 Das System setzt das neue Passwort.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Alternativszenarien
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1a.
 Der Administrator gibt das neue Passwort eines Benutzers ein.
\end_layout

\begin_layout Plain Layout
2a.
 Das alte Passwort des Benutzers ist falsch, der Benutzer wird aufgefordert
 das alte Passwort erneut einzugeben.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Ausnahmeszenarien
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Keine.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Use-Case-Spezifikation Passwort setzen
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Benutzer hinzufügen
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Grafiken/UC13-BenutzerHinzufügen.png
	scale 50

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Use-Case Benutzer hinzufügen
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float table
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="14" columns="2">
<features tabularvalignment="middle">
<column alignment="left" valignment="top" width="0">
<column alignment="left" valignment="top" width="10cm">
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Abschnitt
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Inhalt
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Bezeichner
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
UC13
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Name
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Benutzer hinzufügen
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Priorität
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Wichtigkeit für Systemerfolg: niedrig
\begin_inset Newline newline
\end_inset

Technologisches Risiko: niedrig
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Kritikalität
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Niedrig
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Beschreibung
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Der Administrator erfasst einen neuen Benutzer.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Auslösendes Ereignis
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Der Administrator möchte einen neuen Benutzer erfassen.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Akteure
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Administrator
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Vorbedingung
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Der Administrator ist beim System authentifiziert.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Nachbedingung
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Der Benutzer ist dem System hinzugefügt und kann sich beim System authentifizier
en.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Ergebnis
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Der hinzugefügte Benutzer wird angezeigt.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Hauptszenario
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1.
 Der Administrator gibt den Benutzernamen und das Passwort das neuen Benutzers
 ein und wählt dess Rolle.
\end_layout

\begin_layout Plain Layout
2.
 Der Administrator speichert den Benutzer und dieser wird ihm angezeigt.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Alternativszenarien
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Keine.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Ausnahmeszenarien
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1a.
 Der Benutzer existiert bereits.
 Der Administrator wird aufgefordert zu überprüfen ob die Daten fehlerhaft
 eingetragen wurden oder ob dieser Benutzer ein Duplikat darstellt.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Use-Case-Spezifikation Benutzer hinzufügen.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Benutzer löschen
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Grafiken/UC14-BenutzerLöschen.png
	scale 50

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Use-Case Benutzer löschen
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float table
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="14" columns="2">
<features tabularvalignment="middle">
<column alignment="left" valignment="top" width="0">
<column alignment="left" valignment="top" width="10cm">
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Abschnitt
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Inhalt
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Bezeichner
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
UC14
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Name
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Benutzer löschen
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Priorität
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Wichtigkeit für Systemerfolg: niedrig
\begin_inset Newline newline
\end_inset

Technologisches Risiko: hoch
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Kritikalität
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Hoch
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Beschreibung
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Der Administrator löscht einen Benutzer.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Auslösendes Ereignis
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Der Administrator möchte einen Benutzer löschen.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Akteure
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Administrator
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Vorbedingung
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Der Administrator ist beim System authentifiziert.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Nachbedingung
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Der Administrator kann den Benutzer nicht mehr finden (siehe Kapitel 
\begin_inset CommandInset ref
LatexCommand vref
reference "sub:Benutzer-anzeigen"

\end_inset

).
 Der gelöschte Benutzer kann sich nicht mehr beim System authentifizieren
 (siehe Kapitel 
\begin_inset CommandInset ref
LatexCommand vref
reference "sub:Benutzer-oder-Administrator"

\end_inset

).
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Ergebnis
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Die Löschung wird bestätigt.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Hauptszenario
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1.
 Der Administrator wählt den zu löschenden Benutzer aus.
\end_layout

\begin_layout Plain Layout
2.
 Der Benutzer wird vom System gelöscht.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Alternativszenarien
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Keine.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Ausnahmeszenarien
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2a.
 Der Benutzer ist gegenwärtig auf dem System eingeloggt.
 Der Administrator wird gefragt, ob das System die Authentifizierung löschen
 soll.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Use-Case-Spezifikation Benutzer löschen
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Chapter
Konzept und Architektur
\begin_inset CommandInset label
LatexCommand label
name "chap:Konzept-und-Architektur"

\end_inset


\end_layout

\begin_layout Standard
Die Konzeptphase
\begin_inset Foot
status open

\begin_layout Plain Layout
auch Designphase genannt
\end_layout

\end_inset

 des Wasserfallmodells behandelt die Entwicklung eines vollständigen und
 umfassenden Lösungskonzepts auf Basis der dokumentierten Anforderungen
 (nach 
\begin_inset CommandInset citation
LatexCommand cite
key "Oestereich2006"

\end_inset

).
 Als Grundlage für das Konzept wird in einem ersten Schritt die Toolchain
 erfasst, welche weitere (technisch) Rahmenbedingungen für das Konzept und
 die Archtektur des Systems vorgibt.
 Danach wird das System aus der Bausteinperspektive betrachtet, es wird
 von der Komponentenebene bis zur Klassenebene das System modelliert und
 die Systemarchitektur festgelegt.
 Als weitere Sicht wird die Laufzeitsicht und die Verteilungssicht des Systems
 beleuchtet und spezifiziert.
\end_layout

\begin_layout Section
Marktübersicht
\begin_inset CommandInset label
LatexCommand label
name "sec:Marktübersicht"

\end_inset


\end_layout

\begin_layout Standard
Die Marktübersicht ist an 
\begin_inset CommandInset citation
LatexCommand cite
key "Schwichtenberg2008"

\end_inset

 angelehnt.
\end_layout

\begin_layout Standard

\size tiny
\begin_inset External
	template PDFPages
	filename Grafiken/Vergleich.pdf
	extra LaTeX "pages=-"
	rotateAngle 90

\end_inset


\end_layout

\begin_layout Section
Produkteauswahl
\end_layout

\begin_layout Standard
Das Ziel der Produkteauswahl ist es, aus der Marktübersicht drei OR-Mapper
 zu identifizieren, die genauer betrachtet werden sollen.
 Dazu wurde eine nicht repräsentative Umfrage unter 30 erfahrenen .NET-Entwickler
n durchgeführt, welche Verbreitung, Erfahrungswerte und Beliebtheit bei
 Entwicklern messen sollte.
\end_layout

\begin_layout Subsection
Umfrage
\begin_inset CommandInset label
LatexCommand label
name "sub:Umfrage"

\end_inset


\end_layout

\begin_layout Standard
Die folgenden Fragen wurden in der Umfrage gestellt:
\end_layout

\begin_layout Enumerate
Welche der folgenden .NET OR-Mapper kennst du?
\end_layout

\begin_layout Enumerate
Welche davon hast du schon in einem Projekt eingesetzt? 
\end_layout

\begin_layout Enumerate
Mit welchem Produkt hast du die besten Erfahrungen gemacht? 
\end_layout

\begin_layout Enumerate
Welches Produkt schätzt du am verbreitesten ein? 
\end_layout

\begin_layout Enumerate
Für ein privates Projekt, welchen ORM würdest du einsetzen?
\end_layout

\begin_layout Standard
Um die Umfrage einzugrenzen wurden nur die folgenden, in der Marktübersicht
 (siehe Kapitel 
\begin_inset CommandInset ref
LatexCommand vref
reference "sec:Marktübersicht"

\end_inset

) betrachteten, Produkte zur Auswahl zugelassen:
\end_layout

\begin_layout Itemize
Entity Framework
\end_layout

\begin_layout Itemize
OpenAccess ORM
\end_layout

\begin_layout Itemize
BLToolkit
\end_layout

\begin_layout Itemize
Dapper
\end_layout

\begin_layout Itemize
MyBatis.NET
\end_layout

\begin_layout Itemize
Linq-2-SQL
\end_layout

\begin_layout Itemize
NHibernate
\end_layout

\begin_layout Itemize
SubSonic
\end_layout

\begin_layout Itemize
Signum Framework
\end_layout

\begin_layout Subsubsection
Rücklauf
\end_layout

\begin_layout Standard
Von den 30 angeschriebenen Entwicklern haben 25 geantwortet.
 
\end_layout

\begin_layout Subsubsection
Welche der folgenden .NET OR-Mapper kennst du? 
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Grafiken/U1-WelcheDerFolgendenORMapperKennstDu.png
	display false
	scale 80

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Umfrageresultate Welche der folgenden .NET OR-Mapper kennst du?
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Welche davon hast du schon in einem Projekt eingesetzt? 
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Grafiken/U2-WelcheDavonHastDuSchonInEinemProjektEingesetzt.png
	display false
	scale 80

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Umfrageresultate Welche davon hast du schon in einem Projekt eingesetzt?
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Mit welchem Produkt hast du die besten Erfahrungen gemacht?
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Grafiken/U3-MitWelchemProduktHastDuDieBestenErfahrungenGemacht.png
	display false
	scale 80

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Umfrageresultate Mit welchem Produkt hast du die besten Erfahrungen gemacht?
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Welches Produkt schätzt du am verbreitesten ein? 
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Grafiken/U4-WelchesProduktSchätztDuAmVerbreitestenEin.png
	display false
	scale 80

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Umfrageresultate Welches Produkt schätzt du am verbreitesten ein?
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Für ein privates Projekt, welchen ORM würdest du einsetzen?
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Grafiken/U5-FürEinPrivatesProjektWelchenORMWürdestDuEinsetzen.png
	display false
	scale 80

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Umfrageresultate Für ein privates Projekt, welchen ORM würdest du einsetzen?
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Resultat
\end_layout

\begin_layout Standard
Das Resultat der Umfrage war wenig überraschend.
 Die weite Verbreitung und den guten Ruf des Entity Frameworks war anzunehmen
 aufgrund des Marketings von Microsoft.
 Für die weiteren Schritte werden nun somit folgende drei Produkte genauer
 betrachtet:
\end_layout

\begin_layout Itemize
Entity Framework
\end_layout

\begin_layout Itemize
Dapper
\end_layout

\begin_layout Itemize
NHibernate
\end_layout

\begin_layout Section
Vergleich ausgewählter Produkte
\begin_inset CommandInset label
LatexCommand label
name "sec:Vergleich-ausgewählter-Produkte"

\end_inset


\end_layout

\begin_layout Standard
Der Vergleich der drei in der Umfage (siehe Kapitel 
\begin_inset CommandInset ref
LatexCommand vref
reference "sub:Umfrage"

\end_inset

) ausgewählten Produkte Entity Framework, Dapper und NHibernate basiert
 auf den Kriterien Benutzerfreundlichkeit, Plattformunterstützung, Performance,
 Toolunterstützung, Persistenzlayerpatternsupport, Modelgenerierung, Profiling-
 und Debuggingmöglichkeiten.
 Dabei wird je nach Kriterium auf Grund einer Tabelle der Gewinner erkoren
 oder einfach nur auf textueller Basis.
 
\end_layout

\begin_layout Subsection
Benutzerfreundlichkeit
\end_layout

\begin_layout Standard
Mit Benutzerfreundlichkeit ist der Ease of Use für einen Entwickler gemeint.
 Die Bewertung der Benutzerfreundlichkeit ist auch stark vom Geschmack des
 einzelnen Entwicklers ab.
 Ich persönlich präferiere zum Beispiel Fluent Interfaces da ich dann bereits
 vom Compiler gewarnt werde, falls ich mich beim Namen einer Eigenschaft
 verschrieben habe.
 Andere Entwickler bevorzugen vielleicht XML-basiertes Mapping, da sie die
 baumartige Struktur von XML präferieren.
 Wiederum andere Entwickler werden das Vorhandensein eines Mapping-Designers
 schätzen, da das Mapping abstrahiert wird.
\end_layout

\begin_layout Standard
\begin_inset Float table
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="13" columns="4">
<features tabularvalignment="middle">
<column alignment="left" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Kriterium
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Entity Framework
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Dapper
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
NHibernate
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Fluent Interfaces
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Nein
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Ja
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Nein
\begin_inset Foot
status open

\begin_layout Plain Layout
Die Erweiterung Fluent NHibernate (siehe 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://www.fluentnhibernate.org/
\end_layout

\end_inset

) erlaubt flüssige Interfaces.
 
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Forward Mapping (Database-First)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Ja
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Nein
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Ja
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Reverse Mapping (Model-First)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Ja
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Ja
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Ja
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Migrations
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Ja
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Nein
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Ja
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Modeldesigner
\begin_inset Foot
status open

\begin_layout Plain Layout
Wird später (siehe Kapitel 
\begin_inset CommandInset ref
LatexCommand vref
reference "sub:Toolunterstützung"

\end_inset

) noch im Detail behandelt
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Ja
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Nein
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Nein
\begin_inset Foot
status open

\begin_layout Plain Layout
Das kommerzielle Produkte NHibernate Designer (siehe 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://www.mindscapehq.com/products/nhdesigner
\end_layout

\end_inset

) bietet einen Modeldesigner.
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Assistentenunterstützung
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Ja
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Nein
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Nein
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
XML-basiertes Mappping/Mapping-Datei
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Nein
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Nein
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Ja
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Codebasiertes Mapping über Annotationen
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Ja
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Ja
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Nein
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Monitoring
\begin_inset Foot
status open

\begin_layout Plain Layout
Ist in einem späteren Vergleich (siehe Kapitel 
\begin_inset CommandInset ref
LatexCommand vref
reference "sub:Monitoring"

\end_inset

) eingehender betrachter
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Ja
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Nein
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Ja
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Unterstützung von Hersteller
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Sehr viel
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Wenig
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Mittel
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Inhalt Community-Webseiten (Blogs, Codeproject.com, ...)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Sehr viel
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Mittel
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Viel
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
StackOverflow Posts
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
25000
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
400
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
18000
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Kriterien Benutzerfreundlichkeit
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
NHibernate hat den grossen Vorteil das viele der für Hibernate zugeschnittenen
 3rd-Party-Erweiterungen auch funktionieren und es eine grosse Nutzercommunity
 gibt.
 Der klare Sieger dieser Kategorie ist jedoch das Entity Framework.
 Einerseits weil es Forward- und Reverse-Mapping beherrscht und einen sehr
 mächtigen, in Visual Studio mitgelieferten, Designer besitzt.
 Auch ist der Hilfestellungscontent auf der Seite von Microsoft bzw.
 der Erfahrungsschatz der Community auf Seiten wie StackOverflow ein gewichtiges
 Argument für die Wahl des Entity Frameworks als OR-Mapper.
\end_layout

\begin_layout Subsection
Plattformunterstützung
\end_layout

\begin_layout Standard
Plattformunterstützung beschreibt die Unterstützung von Entwicklungsframeworks
 (.NET Framework, Java, usw.) sowie die Unterstützung von Datenbanken.
 
\end_layout

\begin_layout Standard
\begin_inset Float table
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Tabular
<lyxtabular version="3" rows="14" columns="4">
<features tabularvalignment="middle">
<column alignment="left" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Kriterium
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Entity Framework
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Dapper
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
NHibernate
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Unterstützt .NET Framework 1.0
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Nein
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Nein
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Nein
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Unterstützt .NET Framework 1.1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Nein
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Nein
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Ja
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Unterstützt .NET Framework 2.0
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Nein
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Nein
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Ja
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Unterstützt .NET Framework 3.0
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Nein
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Nein
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Ja
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Unterstützt .NET Framework 3.5
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Ja
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Ja
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Ja
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Unterstützt .NET Framework 4.0
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Ja
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Ja
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Ja
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Unterstützt .NET Framework 4.5
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Ja
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Ja
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Ja
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Unterstützt Mono
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Ja
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Ja
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Ja
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Unterstützt JVM
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Nein
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Nein
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Ja
\begin_inset Foot
status open

\begin_layout Plain Layout
NHibernate ist eine Portierung von Hibernate, einem Java OR-Mapper (siehe
 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://www.hibernate.org/
\end_layout

\end_inset

).
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Unterstützt weitere Entwicklungsframeworks
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Nein
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Nein
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Nein
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Unterstützt Microsoft SQL Server
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Ja
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Ja
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Ja
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Unterstützt Oracle Database Server
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Ja
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Ja
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Ja
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Unterstützt weitere Datenbankmanagementsysteme
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Ja
\begin_inset Foot
status open

\begin_layout Plain Layout
Unterstützt auch SQLCE und weitere DBMS via Drittkomponentenanbieter
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Ja
\begin_inset Foot
status open

\begin_layout Plain Layout
Unterstützt auch SQLCE, Firebird und MySQL
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Ja
\begin_inset Foot
status open

\begin_layout Plain Layout
Unterstützt auch Microsoft Access, Firebird, DB2, UDB, MySQL und SQLLite
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Kriterien Plattformunterstützung
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Entity Framework und Dapper sind seit dem .NET Framework 3.5 verfügbar bzw.
 benutzen LINQ und Lamda-Expressions die mit dieser Version im .NET Framework
 eingeführt wurden.
 NHibernate ist hingegen schon seit dem .NET Framework 1.1 verfügbar, beim
 betrachten des Sourcecodes
\begin_inset Foot
status open

\begin_layout Plain Layout
Siehe 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

https://github.com/nhibernate/nhibernate-core
\end_layout

\end_inset

.
\end_layout

\end_inset

 fällt jedoch auf dass es deutlich weniger elegant geschrieben wurde als
 zum Beispiel Dapper.
 Auch kann die Kernbibliothek von NHibernate nicht direkt mit LINQ von Microsoft
 umgehen sondern musste einen eigenen LINQ-Provider implementieren.
\end_layout

\begin_layout Standard
Da alle drei OR-Mapper auf Basis der DbProviderFactories die Datenbankverbindung
 aufbauen, sind alle grundsätzlich mit sämtlichen .NET Framework Data Providers
 kompatibel.
\end_layout

\begin_layout Standard
NHibernate hat den grossen Vorteil dass es eine Portierung des sehr populären
 Hibernates ist, welches für Java entwickelt wurde.
 Dadurch sind sämtliche Mapping- und Konfigurationsdateien automatisch kompatibe
l mit dem Java-basierten Hibernate.
\end_layout

\begin_layout Standard
Auf Grund der frühen .NET Framework-Kompatibilität und Hibernate als Quelle
 der Portierung ist NHibernate als Gewinner der Plattformunterstützung hervorzuh
eben.
\end_layout

\begin_layout Subsection
Performance
\end_layout

\begin_layout Standard
Angelehnt an 
\begin_inset CommandInset citation
LatexCommand cite
key "Rocha2011"

\end_inset

 und 
\begin_inset CommandInset citation
LatexCommand cite
key "Kochetov2011"

\end_inset

.
\end_layout

\begin_layout Itemize
Query auf eine Tabelle mit Filter auf Primärschlüssel: 
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

SELECT ArtistId, Name FROM Artist WHERE Artist.ArtistId = @id
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Query auf mehrer Tabellen mit Joins, Filter auf Spalte einer Tabelle:
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

SELECT 
\end_layout

\begin_layout Plain Layout

  Album.Title as AlbumName,
\end_layout

\begin_layout Plain Layout

  Track.Name as SongName,
\end_layout

\begin_layout Plain Layout

  Artist.Name as ArtistName
\end_layout

\begin_layout Plain Layout

FROM Artist
\end_layout

\begin_layout Plain Layout

  INNER JOIN Album ON Album.ArtistId = Artist.ArtistId
\end_layout

\begin_layout Plain Layout

  INNER JOIN Track ON Track.AlbumId = Album.AlbumId
\end_layout

\begin_layout Plain Layout

WHERE Artist.Name = @name 
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Einfügen, Aktualisieren und Löschen einer Instanz:
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

INSERT INTO Artist (ArtistId, Name) VALUES (@id, "Daft Prunk")
\end_layout

\begin_layout Plain Layout

UPDATE Artist SET Name = "Daft Punk" WHERE ArtistId = @id
\end_layout

\begin_layout Plain Layout

DELETE FROM Artist WHERE ArtistId = @id
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="16" columns="4">
<features tabularvalignment="middle">
<column alignment="left" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Kriterium
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Entity Framework
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Dapper
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
NHibernate
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Performance eines Queries auf eine Tabelle (1 Run)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2.2ms
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.1ms
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.8ms
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Performance eines Queries auf eine Tabelle (10 Run)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
22.5ms
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2.5ms
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4.4ms
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Performance eines Queries auf eine Tabelle (100 Run)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
207.2ms
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
28.0ms
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
48.1ms
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Performance eines Queries auf eine Tabelle (500 Run)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1041.0ms
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
141.5ms
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
253.6ms
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Performance eines Queries auf eine Tabelle (1000 Run)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2099.8ms
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
285.6ms
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
509.5ms
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Performance eines Queries auf mehrere Tabellen (1 Run)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1.0 ms
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.4ms
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3.4ms
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Performance eines Queries auf mehrere Tabellen (10 Run)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
9.9ms
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
6.4ms
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
35.6ms
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Performance eines Queries auf mehrere Tabellen (100 Run)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
103.3ms
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
68.0ms
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
359.5ms
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Performance eines Queries auf mehrere Tabellen (500 Run)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
525.6ms
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
346.1ms
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1806.2ms
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Performance eines Queries auf mehrere Tabellen (1000 Run)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1071.0ms
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
685.5ms
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3647.1ms
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Performance Einfügen, Aktualisieren und Löschen (1 Run)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
12.8ms
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
8.6ms
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
10.1ms
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Performance Einfügen, Aktualisieren und Löschen (10 Run)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
92.1ms
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
48.0ms
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
63.7ms
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Performance Einfügen, Aktualisieren und Löschen (100 Run)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
813.3ms
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
432.2ms
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
599.1ms
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Performance Einfügen, Aktualisieren und Löschen (500 Run)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3765.1ms
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2013.8ms
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2710.5ms
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Performance Einfügen, Aktualisieren und Löschen (1000 Run)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
6521.0ms
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3721.4ms
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4987.2ms
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Kriterien Performance
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
In diesem Vergleich zeigt sich sehr stark der Unterschied zwischen eine
 kompletten und einem leichtgewichtigen OR-Mapper.
 Dapper als leichtgewichtiger OR-Mapper hat diesen Vergleich klar gewonnen
 und sämtliche Metriken dominiert.
 Dies liegt insbesondere an der einfachen Schichtung des ORMs.
 Entity Framework als der featurestärkste OR-Mapper hat klar die schlechteste
 aufgewiesene Performance.
 
\end_layout

\begin_layout Subsection
Toolunterstützung
\begin_inset CommandInset label
LatexCommand label
name "sub:Toolunterstützung"

\end_inset


\end_layout

\begin_layout Standard
Das Entity Framework bietet mehrfache Toolunterstützung.
 Wenn ein Model-First oder Database-First Ansatz gewählt wird existiert
 ein Designer welcher es erlaubt Entitäten mit ihren Attributen und Beziehungen
 zu modellieren.
 Ausserdem bietet EF verschiedene Assistenten um ein bestehendes Datenbankschema
 zu importieren.
 Wird Code-First das Domain Model entwickelt so existieren eine benutzerfreundli
che NuGet Extension welche dem Entwickler viel Unterstützung bietet.
\end_layout

\begin_layout Standard
Dapper als leichtgewichtiger OR-Mapper bietet keinerlei Toolunterstützung
 an.
 Sämtliche Konfiguration des ORMs geschieht über in Code geschriebene Mappings
 und muss vom Entwickler selbst erstellt werden.
 Die Entitäten können jedoch auch über den Visual Studio Klassendesigner
 erstellt werden.
\end_layout

\begin_layout Standard
NHibernate als herunterladbare Library kommt ohne Tools mit.
 Die Konfiguration geschieht mittels XML-Dateien und die Entitäten können
 mit dem Visual Studio Klassendesigner erstellt werden.
 NHibernate liefert jedoch direkt die XSD Schemas für die XML-Dateien, welche
 dann auch direkt mit Intellisense verwendet werden können.
 Es gibt zahlreiche Fremdkomponentenhersteller welche zusätzliche Tools
 für NHibernate entwickeln, so zum Beispiel der NHibernate Designer von
 Mindscape HQ
\begin_inset Foot
status open

\begin_layout Plain Layout
Siehe 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://www.mindscapehq.com/products/nhdesigner
\end_layout

\end_inset

.
\end_layout

\end_inset

 oder Visual NHibenrate von Slyce
\begin_inset Foot
status open

\begin_layout Plain Layout
siehe 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://www.slyce.com/VisualNHibernate/
\end_layout

\end_inset

.
\end_layout

\end_inset

.
 Diese Tools sind durchaus mächtig und für grössere Projekte anzuraten,
 werden jedoch in dieser Bachelorarbeit nicht betrachtet da sie meist kostenpfli
chtig sind.
\end_layout

\begin_layout Standard
Der Gewinner in dieser Kategorie ist das Entity Framework.
 Die mit dem EF mitgelieferten Tools machen es dem Entwickler denkbar einfach
 Mappings zu erstellen und bieten den gewohnen Komfort von Microsoft Produkten
 wie dem Visual Studio.
 Würde man die Drittanbietertools für NHibernate betrachten würde die Entscheidu
ng wohl nicht so klar ausfallen da NHibernate auch sehr populär ist und
 aus diesem Grund viele Tools von Fremdherstellern existieren.
\end_layout

\begin_layout Subsection
Unterstützung Enterprise Pattern
\end_layout

\begin_layout Standard
Fowlers Enterprise Pattern lassen sich mit jedem OR-Mapper implementieren.
 Die aktuellen Versionen von Entity Framework, NHibernate und Dapper zwingend
 den Entwickler nicht dazu ein Pattern über das andere zu favorisieren.
 Entity Framwork und NHibernate liefern eine einfach Möglichkeit Unit of
 Work
\begin_inset Foot
status open

\begin_layout Plain Layout
Mehr zum Pattern 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://martinfowler.com/eaaCatalog/unitOfWork.html
\end_layout

\end_inset


\end_layout

\end_inset

 zu implementiern, was jedoch nicht Gegenstand dieser Bachelorarbeit ist.
 Dapper hingegen ist als Extension für IDBConnection am flexibelsten für
 jedewedes Enterprise Pattern einzusetzen.
 Im Endeffekt obliegt es dem Entwickler bzw.
 Software Architekten wie der Persistenzlayer einer SOA implementiert werden
 soll und welche Pattenr eingesetzt werden sollen.
 Die Entscheidung ist zu abhängig vom Anwendungsfall des Systems bzw.
 den Anforderungen an dasselbe als dass im Rahmen dieses Vergleichs von
 ORMs eine abschliessende Wertung erstellt werden kann.
\end_layout

\begin_layout Standard
Aus diesem Grund ist diese Kategorie nicht bewertbar und es gibt keine Gewinner
 oder Verlierer.
\end_layout

\begin_layout Subsection
Monitoring
\begin_inset CommandInset label
LatexCommand label
name "sub:Monitoring"

\end_inset


\end_layout

\begin_layout Standard
Montoring eines Persistenzlayers und des dazugehörigen ORMs wird bei der
 Evaluation von ORMs oft fälschlicherweise ausser acht gelassen.
 Dies, da das Montoring häufig erst spät in der Entwicklung eines Systems
 bezeiehungsweise erst in der Wartung des Systems eine Rolle spielt wenn
 Performanceengpässe spürbar werden.
 Wird dann ein ORM eingesetzt der nur sehr eingeschränkt debug- und überwachbar
 ist wird es schwierig die eigentlichen Bottlenecks zu erkennen und beheben.
\end_layout

\begin_layout Standard
Natürlich lassen sich alle ORMs über einen SQL Profiler monitoren.
 Nur leider ist das meistens schwierig zu sagen woher genau die abgesetzten
 Queries stammen beziehungsweise ist die Nachverfolgbarkeit der einzelnen
 Queries zum Mapping im OR-Mapper schwierig.
\end_layout

\begin_layout Standard
Das Entity Framework bietet out-of-the-box nur das Intellitrace debugging
 mit.
 Da jedoch für das Entity Framework die PDB Symbole auf Microsofts Symbol
 Server verfügbar sind ist das debugging ohne grosse Hürden wie selbstkompiliere
n des Entity Frameworks möglich.
 Da das Entity Framework auf Grund seiner Vielzahl von Funktionalitäten
 sehr komplex ist, ist es für einen Entwickler nicht ganz einfach ein einfaches
 Mapping nach zu vollziehen.
 Es existieren eine grosse Anzahl an Dritterherstellertools wie der Entity
 Framework Profiler von Hibernating Rhinos
\begin_inset Foot
status open

\begin_layout Plain Layout
Siehe 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://www.hibernatingrhinos.com/products/EFProf
\end_layout

\end_inset


\end_layout

\end_inset

 oder der EF Provider Wrapper in der Visual Studio Gallery
\begin_inset Foot
status open

\begin_layout Plain Layout
Mehr dazu unter 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://code.msdn.microsoft.com/EFProviderWrappers
\end_layout

\end_inset


\end_layout

\end_inset

 welche bei Performanceengpässen in produktiven Umgebungen zum Einsatz kommen
 können.
\end_layout

\begin_layout Standard
Da Dapper in Sourcecodeform vorliegt ist das Debugging denkbar einfach gestaltet.
 Der Entwickler kann auch einfach eigene Performancecounters implementieren
 oder zum Beispiel ein Tracing aller SQL-Statements realisieren da der Quellcode
 relativ einfach lesbar ist.
 Der Nachteil ist allerdings, dass dies alles selber entwickelt werden muss.
 Dapper selbst liefert keinerlei Montioringtools oder ähnliches mit.
\end_layout

\begin_layout Standard
NHibernate ist ein Open-Source Projekt und aus diesem Grund kann dieses
 für Debuggingzwecke selbst kompiliert werden und debugged werden.
 Auf Grund der Natur von NHibernate (1-zu-1 Portierung von Hibernate in
 Java) ist die lesbarkeit und Verständlichkeit für einen .NET Entwickler
 nicht immer geben.
 Auch ist das Kompilieren von NHibernate mit erheblichem Konfiguraitonsaufwand
 verbunden nicht ohne weiteres durchführbar.
 Für NHibernate existiert wie auch für das Entity Framework der NHibernate
 Profiler von Hibernating Rhinos
\begin_inset Foot
status open

\begin_layout Plain Layout
Siehe 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://www.hibernatingrhinos.com/products/nhprof
\end_layout

\end_inset

.
\end_layout

\end_inset

 welcher auf Grund der Session Statistiken zur Verfügung stellt und auch
 mit dem Sourcecode verknüpft werden kann.
 NHibernate bietet auch die Möglichkeit eigene Interceptoren
\begin_inset Foot
status open

\begin_layout Plain Layout
Mehr zum Interceptor Pattern siehe 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://bosy.dailydev.org/2007/04/interceptor-design-pattern.html.
\end_layout

\end_inset


\end_layout

\end_inset

 zu schreiben.
 So kann zum Beispiel jedes abgesetzte SQL-Statement mit einem Interceptor
 abgefangen werden und in ein Tracefile geschrieben werden.
 Auch lässt sich direkt eine log4net
\begin_inset Foot
status open

\begin_layout Plain Layout
Mehr zu log4net siehe 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

http://logging.apache.org/log4net/
\end_layout

\end_inset

.
\end_layout

\end_inset

 Konfiguration erstellen, welche erweiterte Tracemeldungen von NHibenrate
 in den gewünschten Kanal persistiert.
\end_layout

\begin_layout Standard
Abschliessend lässt es sich sagen dass alle drei betrachteten OR-Mapper
 von Haus aus wenig Montoringmöglichkeiten mitbringen.
 Dies ist wohl auch so gewünscht, bieten insbesondere NHibernate und das
 Entity Framework zahlreiche Möglichkeiten für Entwickler oder Drittanbieter
 Montoringsuiten zu entwickeln und auch verkaufen.
 Dieser Vergleich bezieht sich somit auf die Möglichkeit zu Monitoring und
 auch auf die verfügbaren Monitoringtools von Drittherstelltern.
 Bei dieser Betrachtung ist das Entity Framework der knappe Gewinner vor
 NHibernate dieses Vergleichs.
\end_layout

\begin_layout Subsection
Vergleichsmatrix
\end_layout

\begin_layout Standard
\begin_inset Float table
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="7" columns="2">
<features tabularvalignment="middle">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Kriterium
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Stärkster OR-Mapper
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Benutzerfreundlichkeit
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Entity Framework
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Plattformunterstützung
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
NHibernate
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Performance
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Dapper
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Toolunterstützung
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Enitity Framework
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Unterstützung Enterprise Pattern
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Monitoring
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Entity Framework
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Vergleichsmatrix
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Architektur SoCRM
\end_layout

\begin_layout Subsection
Bausteinsicht
\end_layout

\begin_layout Standard
Nach 
\begin_inset CommandInset citation
LatexCommand cite
key "Starke2011"

\end_inset

 und 
\begin_inset CommandInset citation
LatexCommand cite
key "Hruschka2013"

\end_inset

 lassen sich unter dem Begriff 
\begin_inset Quotes eld
\end_inset

Bausteine
\begin_inset Quotes erd
\end_inset

 sämtliche Software- oder Implementierungskomponenten zusammenfassen, die
 letztendlich Abstraktionen von Quellcode darstellen.
 Dazu gehören Klassen, Prozeduren, Programme, Pakete, Komponenten (nach
 der UML-Definition) oder Subsysteme.
\end_layout

\begin_layout Standard
Die Bausteinsicht bildet die Aufgaben des System auf Software-Bausteine
 oder -Komponenten ab.
 Diese Sicht macht Struktur und Zusammenhänge zwischen den Bausteinen der
 Architektur explizit.
 Bausteinsichten zeigen die statischen Aspekte des Systemes und entsprechen
 in dieser Hinsicht den konventionellen Implementierungsmodellen.
\end_layout

\begin_layout Subsubsection
Komponentendiagramm
\end_layout

\begin_layout Standard
Das Komponentendigramm in Abbildung 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Komponentendiagramm-SoCRM"

\end_inset

 stellt das System SoCRM aus der Vogelperspektive dar und ist die höchstabstrahi
erte Ansicht der Bausteinsicht, die in diesem Projekt verfügbar ist.
 
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Grafiken/Komponentendiagramm.png
	display false
	scale 50

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Komponentendiagramm SoCRM
\begin_inset CommandInset label
LatexCommand label
name "fig:Komponentendiagramm-SoCRM"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Domänenmodell
\end_layout

\begin_layout Standard
Das Domänenmodell (siehe Abbildung 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Klassendiagramm-Domänenmodell-So"

\end_inset

) umfasst nur die Klassen der Objekte, die über die Serviceschnittstelle
 von der Client
\begin_inset CommandInset nomenclature
LatexCommand nomenclature
symbol "Client"
description "Ein Client (oder Clientapplikation) ist eine Softwareanwendung die im Gegensatz zu einer Serverapplikation auf dem Rechner des Benutzers ausgeführt wird."

\end_inset

- an die Serverapplikation
\begin_inset CommandInset nomenclature
LatexCommand nomenclature
symbol "Server"
description "Ein Server (auch Serverapplikation) ist eine serverseitige Anwendung die auf einem zentralen Computer (Server) ausgeführt wird."

\end_inset

 beziehungsweise umgekehrt übertragen werden.
 
\end_layout

\begin_layout Standard
YAEM verwendet ein vergleichsweise simples Domänenmodell.
 Jeder Benutzer wird als 
\emph on
User
\emph default
objekt im Repository
\begin_inset CommandInset nomenclature
LatexCommand nomenclature
symbol "Repository"
description "Ein Repository ist ein Verzeichnis zur Speicherung von digitalen Objekten. In diesem Kontext ist ein Repository eine Datenbank zur Speicherung und zum Wiederfinden von Objektinstanzen."

\end_inset

 der Serverapplikation gespeichert.
 Bei erfolgreichem Gesprächsbeitritt erstellt die Serverapplikation ein
 
\emph on
Ticket
\emph default
objekt, welches an die Clientapplikation zurückgegeben wird.
 Wird eine Nachricht versendet, so erstellt der Client ein 
\emph on
Message
\emph default
objekt, welches die Nachricht selbst als Bytearray
\begin_inset CommandInset nomenclature
LatexCommand nomenclature
symbol "Bytearray"
description "Ein Bytearray ist eine Datenstruktur die als Container für Byte-Werte (ganzzahlige Werte von 0 bis 255) dient."

\end_inset

 in der Eigenschaft 
\emph on
Payload
\emph default
 speichert.
 Will der Benutzer eine verschlüsselte Nachricht versenden, so setzt er
 die Eigenschaft 
\emph on
Algorithm
\emph default
 des 
\emph on
Message
\emph default
objekts auf einen Wert des Enumerators 
\emph on
CryptoAlgorithm
\emph default
, der ungleich 
\emph on
None
\emph default
 ist.
 Wenn die Eigenschaft 
\emph on
Algorithm
\emph default
 gesetzt ist, so muss der Benutzer den 
\emph on
Payload
\emph default
 verschlüsselt in der 
\emph on
Message
\emph default
 ablegen.
\end_layout

\begin_layout Standard
Sämtliche Domänenobjekte leiten von der Klasse 
\emph on
ObjectBase
\emph default
 ab.
 
\emph on
ObjectBase
\emph default
 enthält eine Eigenschaft 
\emph on
Key
\emph default
 in Form einer Globally Unique Identifier
\begin_inset CommandInset nomenclature
LatexCommand nomenclature
symbol "Globally Unique Identifier"
description "Ein Globally Unique Identifier (auch GUID genannt) ist eine eindeutige, 128 Bit lange Zahl, die zur Identifzierung von Objekten in verteilten Systemen dient."

\end_inset

 zur eindeutigen Identifizierung der Objekte in den Repositories.
 Weiterhin implementiert 
\emph on
ObjectBase
\emph default
 das Interface 
\emph on
INotifyPropertyChanged
\emph default

\begin_inset Foot
status open

\begin_layout Plain Layout
Die genaue Schnittstellenbeschreibung ist in der MSDN unter 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://msdn.microsoft.com/en-us/library/system.componentmodel.inotifypropertychanged.
aspx
\end_layout

\end_inset

 zu finden.
\end_layout

\end_inset

, welches in der Windows Presentation Foundation
\begin_inset CommandInset nomenclature
LatexCommand nomenclature
symbol "WPF"
description "Windows Presentation Foundation (kurz WPF) ist ein Grafik-Framework das zusammen mit dem .NET Framework mitgeliefert wird und zur Darstellung von UI-Elementen dient."

\end_inset

 und in Silverlight
\begin_inset CommandInset nomenclature
LatexCommand nomenclature
symbol "Silverlight"
description "Silverlight ist eine Erweiterung für Webbrowser, welche die Ausführung von Rich Internet Applications erlaubt. Silverlight ist eine abgespeckte Version von WPF und wird für auch als Framework für Windows Phone 7 verwendet."

\end_inset

 dazu dient, UI-Elemente, die an Datenobjekte gebunden sind, über geänderte
 Eigenschaften zu informieren.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Grafiken/Domänenmodell.png
	display false
	scale 50

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Klassendiagramm Domänenmodell SoCRM
\begin_inset CommandInset label
LatexCommand label
name "fig:Klassendiagramm-Domänenmodell-So"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Service Contracts
\end_layout

\begin_layout Standard
Ein Service Contract spezifiziert eine Schnittstelle zur Kommunikation verschied
ener Applikationen innerhalb eines verteilten Systems.
 Häufig werden diese Service Contracts als Webservices
\begin_inset CommandInset nomenclature
LatexCommand nomenclature
symbol "Webservice"
description "Ein Webservice ist eine Softwareapplikation, auf den über einen URI eindeutig idenifiziert ist und Daten als XML-Artefakt zurückgibt. Er wird über internetbasierte Protokolle angesprochen."

\end_inset

 angeboten, da sie dadurch plattform- und frameworkunabhängig genutzt werden
 können.
 
\end_layout

\begin_layout Standard
Typischerweise umfasst ein Service Contract mehrere Operationen, deren Rückgabew
erte als XML-Fragmente an die konsumierende Applikation zurückgegeben werden.
 Ausserdem ist ein Service Contract per Definition grundsätzlich zustandslos,
 er behandelt mehrere Anfragen (auch desselben Auftraggebers) immer als
 unabhängige Transaktionen.
 Anfragen werden ohne Bezug zu früheren, vorhergegeganen Anfragen behandelt
 und es werden auch keine Sitzungsinformationen ausgetauscht.
\end_layout

\begin_layout Paragraph
ISecurityService
\begin_inset CommandInset label
LatexCommand label
name "par:ISecurityService"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float table
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="11" columns="2">
<features tabularvalignment="middle">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Methode
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Aufgabe
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
CreateUser
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Erstellt einen neuen Benutzer mit den übergebenen Werten
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
DeleteUser
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Löscht einen Benutzer auf Basis der ObjectId
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
GetAllRoles
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Gibt alle Rollen zurück
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
GetAllUsers
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Gibt alle Benutzer zurück
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
GetUserByCredentials
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Gibt einen Benutzer auf Grund seiner Benutzerinformationen zurück
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
GetUserByObjectId
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Gibt einen Benutzer auf Grund seiner ObjectId zurück
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
GetUsersByRole
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Gibt Benutzer auf Grund ihrer Rolle zurück
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
GetUsersByRoleAndUserName
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Gibt Benutzer auf Grund ihrer Rolle und Benutzernamen zurück
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
SetPassword
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Setzt das Password für einen bestimmten Benutzer
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ValidateCredentials
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Überprüft die übergebenen Benutzerinformationen und liefert wahr oder falsch
 zurück
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Methoden von ISecurityService
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Grafiken/ISecurityService.png
	display false
	scale 50

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Klassendiagramm ISecurityService
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Paragraph
ICustomerService
\begin_inset CommandInset label
LatexCommand label
name "par:ICustomerService"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float table
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="19" columns="2">
<features tabularvalignment="middle">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Methode
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Aufgabe
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
CreateCompany
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Erstellt eine neue Firma mit den übergebenen Werten
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
CreateEMailAddress
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Erstellt eine neue E-Mail-Adresse für einen Kunden
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
CreatePerson
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Erstellt einen neuen Kunden mit den übergebenen Werten
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
CreatePhoneNumber
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Erstellt eine neue Telefonnummer für einen Kunden
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
DeleteCompany
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Löscht eine Firma auf Basis ihrer ObjectId
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
DeleteEMailAddress
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Löscht eine E-Mail-Adresse auf Basis ihrer ObjectId
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
DeletePerson
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Löscht einen Kunden auf Basis seiner ObjectId
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
DeletePhoneNumber
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Löscht eine Telefonnummer auf Basis ihrer ObjectId
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
GetAllCompanies
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Gibt alle Firmen zurück
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
GetAllCountries
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Gibt alle Länder zurück
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
GetAllEMailAddresses
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Gibt alle E-Mail-Adressen eines Kunden zurück
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
GetAllPersons
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Gibt alle Kunden zurück
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
GetAllPhoneNumbers
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Gibt alle Telefonnummern eines Kunden zurück
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
GetCompaniesByNameAndCountry
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Gibt alle Firmen auf Grund ihres Namen und des Landes zurück
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
GetCompanyByObjectId
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Gibt eine Firma auf Grund ihrer ObjectId zurück
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
GetContactTypes
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Gibt alle Kontaktarten zurück
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
GetPersonByObjectId
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Gibt einen Kunden auf Grund seiner ObjectId zurück
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
GetPersonsByNameAndCompany
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Gibt Kunden auf Grund ihres Namens und Arbeitgebers zurück
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Methoden von ICustomerService
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Grafiken/ICustomerService.png
	display false
	scale 50

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Klassendiagramm ICustomerService
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Paragraph
IContactService
\begin_inset CommandInset label
LatexCommand label
name "par:IContactService"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float table
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="10" columns="2">
<features tabularvalignment="middle">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Methode
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Aufgabe
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
CreateContact
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Erstellt einen Kontakt für einen Kunden mit den übergebenen Werten
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
DeleteContact
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Löscht einen Kontakt auf Grund seiner ObjectId
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
GetAllContactMediums
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Gibt alle Kontaktmedien zurück
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
GetContactByObjectId
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Gibt einen Kontakt auf Grund seiner ObjectId zurück
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
GetContactsByCompany
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Gibt Kontakte auf Grund des Arbeitgebers des Kunden zurück
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
GetContactsByContactMedium
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Gibt Kontakte auf Grund des Kontaktmediums zurück
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
GetContactsByContactMediumAndPersonName
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Gibt Kontakte auf Grund des Kontaktmediums und des Kundennamen zurück
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
GetContactsByPerson
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Gibt Kontakte auf Grund des Kunden zurück
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
GetContactsByUser
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Gibt Kontakte auf Grund des Benutzers zurück
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Methoden von IContactService
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Grafiken/IContactService.png
	display false
	scale 50

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Klassendiagramm IContactService
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Paragraph
ILoggingService
\begin_inset CommandInset label
LatexCommand label
name "par:ILoggingService"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float table
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="6" columns="2">
<features tabularvalignment="middle">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Methode
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Aufgabe
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
GetAllLogEvents
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Gibt alle Logeinträge zurück
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
GetAllSeverities
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Gibt alle Schweregrade zurück
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
GetLogEventByObjectId
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Gibt einen Logeintrag auf Grund seiner ObjectId zurück
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
GetLogEventsByServerity
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Gibt alle Logeinträge auf Grund ihres Schweregrads zurück
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
LogEvent
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Erstellt einen neuen Logeinträge mit den übergebenen Werten
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Methoden von ILoggingService
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Grafiken/ILoggingService.png
	display false
	scale 50

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Klassendiagramm ILoggingService
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Laufzeitsicht
\end_layout

\begin_layout Standard
Die Laufzeitsicht beschreibt, welche Bestandteile des Systems zur Laufzeit
 existieren und wie diese zusammenwirken (nach 
\begin_inset CommandInset citation
LatexCommand cite
key "Starke2011"

\end_inset

).
 Dabei kommen wichtige Aspekte des Systembetriebs ins Spiel, die beispielsweise
 den Systemstart, die Laufzeitkonfiguration oder die Administration des
 Systems betreffen.
\end_layout

\begin_layout Standard
Darüber hinaus dokumentiert die Laufzeitsicht, wie Laufzeitkomponenten sich
 aus Instanzen von Implementierungsbausteinen zusammensetzen.
 
\end_layout

\begin_layout Subsection
Verteilungssicht
\end_layout

\begin_layout Standard
Nach 
\begin_inset CommandInset citation
LatexCommand cite
key "Starke2011"

\end_inset

 beschreibt die Verteilungssicht die Ablaufumgebung des Systems in Form
 von Hardwarekomponenten (wie Prozessoren, Speicher, Netzwerk, Router und
 Firewalls) sowie den beteiligten Protokollen.
 In der Infrastruktursicht können die Leistungsdaten und Parameter der beteiligt
en Elemente dargestellt werden.
 Ausserdem werden zusätzlich Betriebssysteme oder externe Systeme aufgenommen.
\end_layout

\begin_layout Standard
Die Verteilungssicht ist von grosser Beduetung für die Betreiber des Systems,
 die Hardwarearchitekten, das Entwicklungsteam sowie Management und Projektleitu
ng (gemäss 
\begin_inset CommandInset citation
LatexCommand cite
key "Hruschka2012"

\end_inset

).
\end_layout

\begin_layout Subsubsection
Verteilungsdiagramm
\end_layout

\begin_layout Standard
Die Verteilungssicht dieser Projektdokumentation enthält nur ein sehr rudimentär
 ausgearbeitetes Verteilungsdiagramm (siehe Abbildung 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Verteilungsdiagramm"

\end_inset

).
 Dies, da kein konkretes Verteilungsszenario der Applikation innerhalb des
 Projekts geplant wurde.
 Das Projekt beeinhaltet die Erarbeitung des Konzepts sowie die konkrete
 Implementierung der Applikation ohne jedoch auf die Verteilung des Systems
 einzugehen.
 
\end_layout

\begin_layout Standard
Generell können die einzelnen Clientapplikationen auf jeglicher Hardware
 laufen, benötigen jedoch jeweils das passende Betriebssystem beziehungsweise
 im Fall des Silverlight-Clients einen Browser mit Silverlight-Plugin.
 Zwischen den Clientapplikationen und der Serverapplikation in Form des
 Servicehosts wird eine Netzwerkverbindung vorausgesetzt bei welcher die
 passenden Ports (siehe Binding Kapitel 
\begin_inset CommandInset ref
LatexCommand vref
reference "sub:Bindings"

\end_inset

) geöffnet und zugänglich sind.
 Auch ist eine Verteilung über das WWW denkbar.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Grafiken/Verteilungsdiagramm.png
	display false
	scale 50

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Verteilungsdiagramm SoCRM
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Chapter
Implementierung
\begin_inset CommandInset label
LatexCommand label
name "chap:Implementierung"

\end_inset


\end_layout

\begin_layout Section
Evaluierung selektierte OR-Mapper
\begin_inset CommandInset label
LatexCommand label
name "sec:Evaluierung-selektierte-OR-Mappe"

\end_inset


\end_layout

\begin_layout Section
Produkteempfehlung
\end_layout

\begin_layout Section
Service Oriented CRM
\end_layout

\begin_layout Subsection
Designprinzipien
\end_layout

\begin_layout Itemize
Sämtliche Interfaces und Entitäten sind in eigenen Klassenbibliotheken abgelegt.
 Dies um die Wiederverwendbarkeit zu erhöhen und die Assemblygrösse zu verkleine
rn.
 Die Service Referenzen zwischen den Projekten und den Web Services verwenden
 immer diese Assemblies anstatt die Entitäten aus dem WSDL des Services
 zu erzeugen.
\end_layout

\begin_layout Itemize
Die Persistence-Services (in SoCrm.Infrastructure.Persistence) besitzen keinerlei
 Geschäftslogik sondern dienen rein dazu Objekte aus dem jeweils verwendeten
 ORM aus der Datenbank zu lesen, zu aktualisieren, hinzuzufügen bzw.
 zu löschen.
 Sämtliche Geschäftslogik ist in den Services (in SoCrm.Services) implementiert.
\end_layout

\begin_layout Itemize
Das Präsentationspattern, welches verwendet wird, ist MVVM+C (nach 
\begin_inset CommandInset citation
LatexCommand cite
key "Skimp2012"

\end_inset

).
 MVVM+C stellt eine Weiterentwicklung von MVVM dar und verschiebt die Erzeugung
 der View und des ViewModels in den Controller.
 Auch wird die Beziehung zwischen der View und dem ViewModel im Controller
 erzeugt und nicht mehr über das Binding gelöst.
\end_layout

\begin_layout Itemize
Um dynamisch Views innerhalb einer Shell laden zu können sind alle Views
 als UserControls implementiert, welche in den ControlContainer der ShellView
 eingefügt werden können.
\end_layout

\begin_layout Itemize
Die Serviceimplementierungen (.svc Code-Behind-Dateien) sollen möglichst
 schlank und entkoppelt sein.
 Deswegen wird möglichst viel Logik in Basisklassen bzw.
 andere Orte ausgelagert insbesondere im Zusammenhang mit dem Zugriff auf
 ORMs.
 Dadurch wird die Les- und Testbarkeit der Serviceimplementeirungen erhöht.
\end_layout

\begin_layout Subsection
Komponenten im Detail
\end_layout

\begin_layout Standard
Dieses Kapitel beschreibt im Detail die Implementierung der einzelnen Komponente
n.
 Dabei wird auf Besonderheiten in der Architektur der Komponenten hingewiesen
 und es wird ein gesamter technischer Überblick über die Umsetzung des Konzepts
 gegeben.
\end_layout

\begin_layout Standard
Zur besseren Orientierung innerhalb des Systems wird auf Abbildung 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Visual-Studio-Solution"

\end_inset

 verwiesen, welche die Struktur Visual Studio-Solution darstellt.
 
\end_layout

\begin_layout Standard
Die Namensgebung der Unterkapitel hält sich dabei an die Namespaces der
 Projekte.
 Die verwendeten Grafiken zeigen nur die beschriebenen Klassen und Interfaces
 an, die Projekte enthalten noch weitere Codedateien die jedoch nicht erwähnensw
ert sind und deswegen in den Klassendiagrammen auch nicht gezeichnet sind.
 Auch wurden nur in denjenigen Unterkapiteln Klassendiagramme eingefügt
 wo es für den Leser von Interesse sein könnte.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Grafiken/Solution.PNG
	scale 50

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Visual Studio Solution
\begin_inset CommandInset label
LatexCommand label
name "fig:Visual-Studio-Solution"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
SoCrm.Core.Contracts
\begin_inset CommandInset label
LatexCommand label
name "sub:SoCrm.Core.Contracts"

\end_inset


\end_layout

\begin_layout Standard
Diese Klassenbibliothek enthält die Basisklasse aller Entitäten, das DomainObjec
t.
 Sie implementiert das Interface IDomainObject welches unter anderem den
 Identifier, die ObjectId, deklariert.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Grafiken/SoCrm.Core.Contracts.png
	scale 50

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Klassendiagramm SoCrm.Core.Contracts
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
SoCrm.Core.Services
\begin_inset CommandInset label
LatexCommand label
name "sub:SoCrm.Core.Services"

\end_inset


\end_layout

\begin_layout Standard
In der Klassenbibliothek SoCrm.Core.Services befindet sich die Infrastruktur
 um WCF Services mit dem Dependency Injection Container Unity
\begin_inset Foot
status open

\begin_layout Plain Layout
Mehr zu Unity und Dependency Injection unter 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://unity.codeplex.com/
\end_layout

\end_inset


\end_layout

\end_inset

 betreiben zu können.
 Damit die WCF Services mit Unit Tests versehen werden können wurden die
 externen Abhängigkeiten mit Dependency Injection entkoppelt.
 Für das Starten der Services wird jedoch ein spezieller Service-Host, der
 UnityServiceHost, benötigt, welcher beim Aufstarten ein Behavior mit dem
 Unity-Container erzeugt und dem Service injected.
 Der spezifische Service-Host, das Service-Behavior und das Instance-Behavior
 sind in diesem Projekt zu finden.
\end_layout

\begin_layout Subsubsection
SoCrm.Infrastructure.Persistence.Contracts
\end_layout

\begin_layout Standard
Für jeden Entitätstyp existiert ein Persistenzservice, wessen Interface
 in dieser Assembly abgelegt ist.
 Dabei erbt jedes Inteface von einem generischen Interface IPersistenceService<T
>.
 Da WCF jedoch nicht ohne weiteres generische Interfaces unterstützt wurde
 für jeden Entitätstyp ein eigenes Persistence-Service Inteface erstellt.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Grafiken/SoCrm.Persistence.Contracts.png
	scale 50

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Klassendiagramm SoCrm.Infrastructure.Persistence.Contracts
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
SoCrm.Infrastructure.Persistence.Dapper
\end_layout

\begin_layout Standard
Die Persistenzlayerimplementierung von Dapper in der WCF Service Application
 SoCrm.Infrastructure.Persistence.Dapper besteht aus einer Basisklasse PersistenceS
erviceBase<T>, welche als Parameter den Entitätstypen akzeptiert, und den
 acht *PersistenceServices, welche jeweils einen eigenen WCF Service darstellen.
 Jeder PersistenceService implementiert das entsprechende PersistenceService
 Interface aus SoCrm.Infrastructure.Persistence.Contracts und leitet von der
 PersistenceServiceBase ab.
\end_layout

\begin_layout Standard
Die PersistenceServiceBase beeinhaltet sämtliche Zugriffslogik auf Dapper
 um einzelne Entitäten zu Lesen und zu löschen, das Speichern und das Lesen
 von Objektgraphen ist im jeweiligen *PersistenceService implementiert da
 ein manuelles Mapping innerhalb von Dapper dafür notwendig ist.
\end_layout

\begin_layout Subsubsection
SoCrm.Infrastructure.Persistence.EntityFramework
\end_layout

\begin_layout Standard
Die Persistenzlayerimplementierung von EntityFramework als WCF Service Applikati
on in SoCrm.Infrastructure.Persistence.EntityFramework besitzt wiederum acht
 *PersistenceServices welche die entsprechendne Service-Inferfaces aus SoCrm.Infr
astructure.Persistence.Contracts implementieren.
 Sämtliche Logik ist dabei in der generischen Basisklasse PersistenceServiceBase
 abgelegt, die einzelnen *PersistenceServices sind leer und dienen lediglich
 als Endpoints für die WCF Services.
\end_layout

\begin_layout Standard
Die PeristenceServiceBase kümmert sich um das vorbereiten der Entitäten
 (Validierung, setzen von Änderungsdatum und -Benutzer, usw.) und holt sich
 aus der DataServiceFactory den pro Entität spezfischen DataService.
 Der DataService interagiert mit dem jeweiligen ObjectContext des Entity
 Frameworks.
\end_layout

\begin_layout Standard
Aus Gründen der Übersichtlichkeit und ERweiterbarkeit wurden vier ObjectContexte
 eingeführt, einer für jede Funktionalität des Systems: SecurityContext,
 LoggingContext, CustomerContext und ContactContext.
\end_layout

\begin_layout Standard
Da das EntityFramework 5.0 verwendet wird, wurden die Entitäten Code-First
 entwickelt.
 Das EntityFramework bietet für den diesen Anwdungsfalls Migrationen an,
 welche von der PowerShell-Extension über die NuGet-Konsole erzeugt werden.
 Diese Migraitonen sind auch in dieser Assembly gespeichert im Namespace
 SoCrm.Infrastructure.Persistence.EntityFramework.Migrations.
\end_layout

\begin_layout Subsubsection
SoCrm.Infrastructure.Persistence.NHibernate
\end_layout

\begin_layout Standard
Die WCF Service Application SoCrm.Infrastructure.Persistence.NHibernate enthält
 die Persistenzlayerimplementeriung des ORMs NHibernate.
 Alle acht *PersistenceServices benutzen die PersistenceServiceBase<T> Klasse
 als Basisklasse welche den Session-Container von NHibernate wrappt und
 diesen über den NHibernateHelper SessionFactory erzeugt.
 Der NHibernateHelper erstellt die Mapping-Konfiguration von NHibernate
 und lädt alle Mappings der Entitäten.
\end_layout

\begin_layout Standard
Die Mappings für alle Entitäten sind im Namespace SoCrm.Infrastructure.Persistence.
NHibernate.Mappings abgelegt.
 Dabei werden FluentNHibernate
\begin_inset Foot
status open

\begin_layout Plain Layout
Siehe 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://www.fluentnhibernate.org/
\end_layout

\end_inset


\end_layout

\end_inset

 verwendet um die XML-Konfiguration zu vereinfachen und den aufwand zu verkleine
rn.
 
\end_layout

\begin_layout Subsubsection
SoCrm.Presentation.App
\end_layout

\begin_layout Standard
Dieses Projekt liefert eine ausführbare Assembly als Build-Output.
 Die ShellView beeinhaltet ein Dockpanel, welches ein Menu, eine Toolbar,
 ein zentrales ContentControl sowie eine StatusBar enthält.
 Das ShellViewModel besitzt eine Referenz auf den AppController welcher
 aus dem UnityContainer die Controller der SoCrm.Infrastructure.Presentation.Contac
ts, SoCrm.Infrastructure.Presentation.Customers oder SoCrm.Infrastructure.Presentatio
n.Security Assembly bezieht und dort auf die gewünschten Seiten navigiert.
\end_layout

\begin_layout Standard
Beim Aufstarten der Applikation werden im Bootstrapper die Module der Presentati
on-Assemblies registriert, welche wiederum die Controller und ViewModels
 im Unity-Container registrieren.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Grafiken/SoCrm.Presentation.App.png
	scale 50

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Klassendiagramm SoCrm.Presentation.App
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
SoCrm.Presentation.Contacts
\end_layout

\begin_layout Standard
In der Assembly SoCrm.Infrastructure.Presentation.Contacts sind die Views und
 ViewModels der Kontaktfunktionalität untergebracht.
 Wie bei allen Presentation-Assemblies ist der Controller (hier der ContactContr
oller) Dreh- und Angelpunkt.
 Er instanziiert bei Bedarf die ConstactListView und das ContactListViewModel
 (für das Anzeigen bestehender Kontakte verantwortlich) sowie die CreateContactV
iew und das CreateContactViewModel (enthält die Funktionalität zum Erstellen
 von neuen Kontakten für einen Kunden).
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Grafiken/SoCrm.Presentation.Contacts.png
	scale 50

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Klassendiagramm SoCrm.Presentation.Contracts
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
SoCrm.Presentation.Core
\end_layout

\begin_layout Standard
Diese Assembly enthält die gesamte Infrastruktur für die WPF Anwendung.
 Dazu gehören die Basisklassen für ViewModel und Controller als auch der
 StatusBarService, welcher Nachrichten in der Statusbar der ShellView darstellt.
 Das RegionModel dient zum Darstellen der aktuellen View im ContentControl
 der ShellView.
 Die ViewModelBase implementiert das Interface INotifyPropertyChanged (siehe
 MSDN 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://msdn.microsoft.com/en-us/library/system.componentmodel.inotifypropertychanged.
aspx
\end_layout

\end_inset

) welches das Binding bei geänderten Objektendaten im Modell benachrichtigt.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Grafiken/SoCrm.Presentation.Core.png
	scale 50

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Klassendiagramm SoCrm.Presentation.Core
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
SoCrm.Presentation.Customers
\end_layout

\begin_layout Standard
Die Assembly SoCrm.Infrastructure.Presentation.Customers enthält sämtlich Funktiona
litäten für das Anzeigen Hinzufügen und Löschen von Kunden als auch Firmen.
 Alle Views und ViewModels werden über den CustomerController instanziiert
 und angezeigt.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Graphics
	filename Grafiken/SoCrm.Presentation.Customers.png
	scale 50

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Caption

\begin_layout Plain Layout
Klassendiagramm SoCrm.Presentation.Customers
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
SoCrm.Presentation.Security
\end_layout

\begin_layout Standard
SoCrm.Infrastructure.Presentation.Security enthält die Views und ViewModels
 für die Benutzerverwaltung sowie das Authentifizieren beim System.
 Auch ist die SetPasswordView und das SetPasswordViewModel ein Teil dieser
 Assembly.
 Das AuthenticationViewModel besitzt eine Referenz auf den AuthenticationService
 welcher als Singelton im Unity-Container registriert ist und den jeweils
 angemeldeten Benutzer verwaltet.
 Der SecurityController verwaltet die Instanziierung der Views und ViewModels.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Grafiken/SoCrm.Presentation.Security.png
	scale 50

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Klassendiagramm SoCrm.Presentation.Security
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
SoCrm.Services.Contacts.Contracts
\end_layout

\begin_layout Standard
In diesere Assembly befindet sich die Entität Contact, welche von DomainObject
 (in SoCrm.Core.Contracts, siehe Kapitel 
\begin_inset CommandInset ref
LatexCommand vref
reference "sub:SoCrm.Core.Contracts"

\end_inset

) erbt und das bereits im oberen Kapitel beschriebene Service-Interface
 IContactService (siehe Kapitel 
\begin_inset CommandInset ref
LatexCommand vref
reference "par:IContactService"

\end_inset

).
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Grafiken/SoCrm.Services.Contacts.Contracts.png
	scale 50

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Klassendiagramm SoCrm.Services.Contacts.Contracts
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
SoCrm.Services.Contacts.Provider
\end_layout

\begin_layout Standard
Die WCF Service Applikation SoCrm.Services.Contacts.Provider liefert die Implementi
erung zum Service-Interface IContactService in SoCrm.Services.Contacts.Contracts.
 Der ContactService besitzt dabei seine eigene ContactServiceHostFactory
 die von ServiceHostFactory ableitet und den UnityServiceHost (siehe Kapitel
 
\begin_inset CommandInset ref
LatexCommand vref
reference "sub:SoCrm.Core.Services"

\end_inset

) instaziiert und einen neuen Unity-Container erstellt.
 Der ContactService implementiert sämtliche Geschäftslogik betreffend Kontaktdat
en und ruft den Persistenzservice für Kontakte (implementiert in einem der
 SoCrm.Infrastructure.Persistence.* Projekte) auf um die Entitäten aus dem
 Persistenzlayer zu lesen.
 
\end_layout

\begin_layout Subsubsection
SoCrm.Services.Customers.Contracts
\end_layout

\begin_layout Standard
Die Klassenbibliothek SoCrm.Services.Customers.Contracts beeinhaltet alle Entitäten
 den Kunden sowie Firmen betreffend.
 Ausserdem ist das Interface ICustomerService in diesere Assembly definiert
 (siehe Kapitel 
\begin_inset CommandInset ref
LatexCommand vref
reference "par:ICustomerService"

\end_inset

), welches in SoCrm.Service.Customers.Provider als WCF Service CustomerService
 implementiert ist.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Grafiken/SoCrm.Services.Customers.Contracts.png
	scale 50

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Klassendiagramm SoCrm.Services.Customers.Contracts
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
SoCrm.Services.Customers.Provider
\end_layout

\begin_layout Standard
SoCrm.Services.Customers.Provider ist eine WCF Service Applikation welche das
 Interface ICustomerService implementiert und auf die Persistenceservices
 IAddresPersistenceService, ICompanyPersistenceService, IEMailAddressPersistence
Service, IPersonPersistenceService und IPhoneNumberPersistenceService zugreift.
 Es beeinhaltet alle Geschäftslogik um mit Personen und Firmen zu interagieren.
\end_layout

\begin_layout Subsubsection
SoCrm.Services.Logging.Contracts
\end_layout

\begin_layout Standard
In der Assembly SoCrm.Services.Logging.Contracts enthält die Entität LogEvent
 und das Service-Interface ILoggingService (siehe Kapitel 
\begin_inset CommandInset ref
LatexCommand vref
reference "par:ILoggingService"

\end_inset

).
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Grafiken/SoCrm.Services.Logging.Contracts.png
	scale 50

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Klassendiagramm SoCrm.Services.Logging.Contracts
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
SoCrm.Services.Logging.Provider
\end_layout

\begin_layout Standard
Die WCF Service Application SoCrm.Services.Logging.Provider beeinhaltet den
 LoggingService welcher das Service-Interface ILoggingService aus dem Namespace
 SoCrm.Services.Logging.Contracts.
 Die Service Application nutzt dafür den Persistence-Service ILogEventPersistenc
eService aus dem Persistenzlayer und implementiert die Geschäftslogik für
 den Umgang mit Logeinträgen.
\end_layout

\begin_layout Subsubsection
SoCrm.Services.Security.Contracts
\end_layout

\begin_layout Standard
Die Assembly SoCrm.Services.Security.Contracts definiert aus dem Service-Interface
 ISecurityService (siehe Kapitel 
\begin_inset CommandInset ref
LatexCommand vref
reference "par:ISecurityService"

\end_inset

) auch die Entität User.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Grafiken/SoCrm.Services.Security.Contracts.png
	scale 50

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Klassendiagramm SoCrm.Services.Security.Contracts
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
SoCrm.Services.Security.Provider
\end_layout

\begin_layout Standard
SoCrm.Services.Security.Provider ist eine WCF Service Application, welche den
 Service SecurityService enthält.
 Der SecurityService implementiert das Interface ISecurityService aus dem
 Namespace SoCrm.Services.Security.Contracts und enhält die Geschäftslogik
 für den Umgang mit Benutzern des Systems SoCRM.
 Der SecurityService seinerseits erhält seine Objekte aus dem Persistence-Servic
e IUserPersistenceService.
\end_layout

\begin_layout Chapter
Verifikation
\begin_inset CommandInset label
LatexCommand label
name "chap:Verifikation"

\end_inset


\end_layout

\begin_layout Standard
Die Überprüfung und Verifikation des Softwareprodukts zählt zu den wichtigsten
 Teilen der Softwareentwicklung.
 Insbesondere da in den letzten Jahren neue Methoden und Technologien auf
 den Markt gekommen sind, die dem Softwareentwickler helfen, diese anspruchsvoll
e Arbeit zu erledigen wird in diesem Kapitel ein Basiswissen auf technischer
 Ebene vermittelt.
\end_layout

\begin_layout Standard
Unit-Tests als automatisierte Tests, die in Quellcode vom Softwareentwickler
 geschrieben werden, werden als Erstes vorgestellt.
 Anschliessend wird auf das Thema Akzeptanztest eingegangen, mit Hilfe deren
 Anforderungen an ein System unter Einbezug der Systemfunktionalitäten selbst
 getestet werden können.
\end_layout

\begin_layout Section
Unit-Tests
\begin_inset CommandInset label
LatexCommand label
name "sec:Unit-Tests"

\end_inset


\end_layout

\begin_layout Standard
Unit-Tests (auch Komponententests genannt) überprüfen, ob die von Entwicklern
 geschriebenen Komponenten so arbeiten, wie diese es beabsichtigen.
 Zur Qualitätssicherung eines Softwareprodukts wird eine sehr häufige Ausführung
 der Unit-Tests angestrebt.
 Das lässt sich nur erreichen, wenn die Tests vollständig automatisiert
 vorliegen, sie also selbst ein Programm sind, dessen Ausführung nicht mehr
 Aufwand als einen Knopfdruck erfordert.
 Insbesondere in der testgetriebenen Entwicklung (siehe Kapitel 
\begin_inset CommandInset ref
LatexCommand vref
reference "sub:Testgetriebene-Entwicklung"

\end_inset

) werden Unit-Tests auch als Regressionstests nach Refactoring verwendet.
 
\end_layout

\begin_layout Standard
Durch die testgetriebene Entwicklung von YAEM werden alle implementierten
 Komponenten schon vorgängig mit Unit-Tests abgedeckt.
 Die Unit-Tests sind dabei in einem eigenen Visual Studio-Projekt innerhalb
 der Solution untergebracht und werden nicht zusammen mit dem produktiven
 Code verteilt.
\end_layout

\begin_layout Subsection
Testabdeckung
\end_layout

\begin_layout Standard
Eine Kenngrösse zur Qualitätssicherung und zur Steigerung der Softwarequalität
 stellt die Testabdeckung dar.
 Die Testabdeckung bezeichnet die prozentuale Menge des produktiven Quellcodes,
 der über automatisierte Unit-Tests abgedeckt ist, im Vergleich zur Gesamtmenge
 des Codebasis.
 Insbesondere hift die Testabdeckung bei der Identifizierung von einzelnen
 Bereichen im Quellcode die potentiell fehleranfällig (da ungetestet beziehungsw
eise ungenügend getestet) sind.
\end_layout

\begin_layout Standard
Die Persistenzlayerimplementierungen SoCrm.Infrastructure.Persistence.Dapper,
 SoCrm.Infrastructure.Persistence.EntityFramework und SoCrm.Infrastructure.Persistenc
e.NHibernate wurden aus Zeitgründen nicht automatisiert über Unit Tests getestet.
 Dies da insbesondere in NHibernate und EntityFramwork es sehr aufwendig
 ist die Session bzw.
 den ObjectContext zu mocken und der Persistenzlayer implizit in den Akzeptanzte
st (siehe Kapitel 
\begin_inset CommandInset ref
LatexCommand vref
reference "sec:Akzeptanztests"

\end_inset

) getestet wird.
\end_layout

\begin_layout Standard
Wie in Tabelle 
\begin_inset CommandInset ref
LatexCommand ref
reference "tab:Testabdeckung"

\end_inset

 ersichtlich ist, beträgt die totale Testabdeckung (ohne den Persistenzlayer)
 85%.
\end_layout

\begin_layout Standard
\begin_inset Float table
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="20" columns="4">
<features tabularvalignment="middle">
<column alignment="left" valignment="top" width="0">
<column alignment="left" valignment="top" width="0">
<column alignment="left" valignment="top" width="0">
<column alignment="left" valignment="top" width="0">
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Namespace
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Codeblöcke
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Getestet (Blöcke)
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Getestet (% Blöcke)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
SoCrm.Core.Contracts
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
18
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
18
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
100%
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
SoCrm.Core.Services
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
63
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
33
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
52%
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
SoCrm.Infrastructure.Persistence.Contracts
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
100%
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
SoCrm.Infrastructure.Persistence.Dapper
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
SoCrm.Infrastructure.Persistence.EntityFramework
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
SoCrm.Infrastructure.Persistence.NHibernate
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
SoCrm.Presentation.App
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
148
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
114
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
77%
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
SoCrm.Presentation.Contacts
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
168
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
156
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
93%
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
SoCrm.Presentation.Core
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
162
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
128
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
79%
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
SoCrm.Presentation.Customers
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
529
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
497
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
94%
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
SoCrm.Presentation.Security
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
276
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
252
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
91%
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
SoCrm.Services.Contacts.Contracts
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
42
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
42
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
100%
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
SoCrm.Services.Contacts.Provider
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
49
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
42
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
86%
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
SoCrm.Services.Customers.Contracts
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
102
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
102
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
100%
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
SoCrm.Services.Customers.Provider
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
103
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
92
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
92%
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
SoCrm.Services.Logging.Contracts
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
18
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
18
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
100%
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
SoCrm.Services.Logging.Provider
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
28
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
21
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
75%
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
SoCrm.Services.Security.Contracts
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
18
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
18
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
100%
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
SoCrm.Services.Security.Provider
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
69
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
62
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
85%
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Testabdeckung
\begin_inset CommandInset label
LatexCommand label
name "tab:Testabdeckung"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Akzeptanztests
\begin_inset CommandInset label
LatexCommand label
name "sec:Akzeptanztests"

\end_inset


\end_layout

\begin_layout Standard
Mithilfe von Akzeptanztest
\begin_inset Foot
status open

\begin_layout Plain Layout
auch Abnahmetests oder User Acceptance Tests (UAT)
\end_layout

\end_inset

 wird geprüft, ob die Software die funktionalen Erwartungen und Anforderungen
 im Gebrauch erfüllt.
 Dabei werden Akzeptanztests als Black-Box-Tests
\begin_inset CommandInset nomenclature
LatexCommand nomenclature
symbol "Black-Box-Test"
description "Ein Black-Box-Test bezeichnet einen Test ohne Kenntnisse über die innere Funktionsweise des zu testenden Systems. Er beschränkt sich auf funktionsorientiertes Testen, das heisst für die Ermittlung der Testfälle werden nur die Anforderungen, aber nicht die Implementierung des Testobjekts herangezogen. Die genaue Beschaffenheit des Programms wird nicht betrachtet, sondern vielmehr als Black Box behandelt. Nur nach aussen sichtbares Verhalten fliesst in den Test ein."

\end_inset

 gegen die einzelnen Use-Cases der funktionalen Anforderungen (siehe Kapitel
 
\begin_inset CommandInset ref
LatexCommand vref
reference "sec:Use-Case-Spezifikationen"

\end_inset

) geprüft, das heisst der Test hat keine Kentnisse über die innere Funktionsweis
e des Systems und imitiert den Benutzer der Applikation.
\end_layout

\begin_layout Standard
In diesem Projekt werden zur Entwicklung der Akzeptanztests Coded UI-Tests
 verwendet.
 Coded UI-Tests
\begin_inset Foot
status open

\begin_layout Plain Layout
Mehr zu Coded UI-Tests in der MSDN Library unter 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://msdn.microsoft.com/en-us/library/dd286681.aspx
\end_layout

\end_inset

.
\end_layout

\end_inset

 sind automatisierte Tests die auf der Benutzerfläche festgelegte Aktionen
 als Skript ausführen lassen.
 Ein Coded UI-Test kann ausserdem auf einzelnen UI-Elementen Erwartungen
 definieren (z.B.
 nach Klick auf den 
\begin_inset Quotes eld
\end_inset

Senden
\begin_inset Quotes erd
\end_inset

-Button muss die Nachricht-Textbox leer sein).
\end_layout

\begin_layout Standard
Die Anforderungen in den Use-Cases UC1 bis UC4 aus den Use-Case-Spezifikationen
 werden als Coded UI-Tests ausformuliert und im Visual Studio-Projekt 
\emph on
YAEM.AcceptanceTests
\emph default
 abgelegt.
 Beim Ausführen einer der Coded UI-Tests wird automatisch die Serverapplikation
 sowie die Clientapplikation gestartet und der jeweilige Testfall wird als
 Skript abgearbeitet.
 Je nach Use-Case sind unterschiedliche Eingaben sowie Erwartungen definiert.
 Werden diese nicht erfüllt (z.B.
 wird nach dem Senden einer Nachricht beim Empfänger keine neue Nachricht
 angezeigt) so wird schlägt der Test fehl.
\end_layout

\begin_layout Standard
Die Ergebnisse der Akzeptanztests sind in Tabelle 
\begin_inset CommandInset ref
LatexCommand ref
reference "tab:Akzeptantests"

\end_inset

 ersichtlich.
 Alle Anforderungen können erfüllt werden und die Akzeptanztests werden
 als bestanden betrachtet.
\end_layout

\begin_layout Standard
\begin_inset Float table
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="5" columns="4">
<features tabularvalignment="middle">
<column alignment="left" valignment="top" width="0">
<column alignment="left" valignment="top" width="0">
<column alignment="left" valignment="top" width="0">
<column alignment="left" valignment="top" width="0">
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Bezeichner
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Use-Case
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Testklasse
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Testergebnis
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
UC1
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Gespräch beitreten
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
UC1Tests
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
bestanden
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
UC2
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Gespräch verlassen
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
UC2Tests
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
bestanden
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
UC3
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Nachricht senden
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
UC3Tests
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
bestanden
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
UC4
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Nachricht empfangen
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
UC4Tests
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
bestanden
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Akzeptantests
\begin_inset CommandInset label
LatexCommand label
name "tab:Akzeptantests"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Chapter
Fazit
\end_layout

\begin_layout Section
Schlussfolgerungen
\end_layout

\begin_layout Chapter*
\start_of_appendix
Akronyme
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
AES Advanced Encryption Standard
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
API Application Programming Interface
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
CAPI Cryptography API
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
DCOM Distributed Component Object Model
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
DES Data Encryption Standard
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
GUI Graphical User Interface
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
HTTP Hypertext Transfer Protocol
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
IIS Internet Information Server
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
IV Initialisierungsvektor
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
MEF Managed Extensibility Framework
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
MSDN Microsoft Developer Network
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
MSMQ Microsoft Message Queuing
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
MVVM Model View View-Model
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
NIST National Institute of Standards and Technology
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
RUP Rational Unified Process
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
SL Silverlight
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
SOA Service Oriented Architecture
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
SOAP Simple Object Access Protocol
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
TDD Test Driven Development
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
UC Use Case
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
UI User Interface
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
URI Uniform Resource Identifier
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
UX User Experience
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
W3C World Wide Web Consortium
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
WCF Windows Communication Foundation
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
WSDL Web Services Description Language
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
WPF Windows Presentation Foundation
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
WWW World Wide Web
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
XAML Extensible Application Markup Language
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
XML Extensible Markup Language
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
XP Extreme Programming
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
YAEM Yet Another Encrypted Messenger
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
ZHAW Zürcher Hochschule für Angewandte Wissenschaften
\end_layout

\begin_layout Standard
\begin_inset FloatList figure

\end_inset


\end_layout

\begin_layout Standard
\begin_inset FloatList table

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset nomencl_print
LatexCommand printnomenclature
set_width "auto"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset bibtex
LatexCommand bibtex
bibfiles "VergleichVonObjektrelationalenMappern"
options "/Users/florian/Downloads/alphadin"

\end_inset


\end_layout

\end_body
\end_document
